[{"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\index.js":"1","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\reportWebVitals.js":"2","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\App.js":"3","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\redux\\reducers.js":"4","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\redux\\setReducers.js":"5","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\redux\\actions.js":"6","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\ApplicationRoutes.js":"7","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainFrames\\LoginPage.js":"8","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\serviceWorker.js":"9","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\requests\\auth.js":"10","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\requests\\restaurant.js":"11","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainFrames\\MainPage.js":"12","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\drawers\\LeftDrawer.js":"13","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\drawers\\RightDrawer.js":"14","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\OrderPanel.js":"15","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainFrames\\RegisterPage.js":"16","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\MenuPanel.js":"17","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\ItemPanel.js":"18"},{"size":804,"mtime":1607454930932,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":784,"mtime":1607564842737,"results":"22","hashOfConfig":"20"},{"size":1149,"mtime":1607568414405,"results":"23","hashOfConfig":"20"},{"size":376,"mtime":1607564947339,"results":"24","hashOfConfig":"20"},{"size":733,"mtime":1607564815537,"results":"25","hashOfConfig":"20"},{"size":1625,"mtime":1607553966313,"results":"26","hashOfConfig":"20"},{"size":5008,"mtime":1607552745798,"results":"27","hashOfConfig":"20"},{"size":5086,"mtime":499162500000,"results":"28","hashOfConfig":"20"},{"size":1411,"mtime":1607561283506,"results":"29","hashOfConfig":"20"},{"size":2008,"mtime":1607579902588,"results":"30","hashOfConfig":"20"},{"size":2999,"mtime":1607580282817,"results":"31","hashOfConfig":"20"},{"size":4683,"mtime":1607580396329,"results":"32","hashOfConfig":"20"},{"size":2585,"mtime":1607409205970,"results":"33","hashOfConfig":"20"},{"size":4823,"mtime":1607563737340,"results":"34","hashOfConfig":"20"},{"size":6683,"mtime":1607584795655,"results":"35","hashOfConfig":"20"},{"size":4996,"mtime":1607581170475,"results":"36","hashOfConfig":"20"},{"size":3751,"mtime":1607582990033,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"ne4954",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"40"},"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\index.js",[],["86","87"],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\reportWebVitals.js",[],["88","89"],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\App.js",["90"],"import logo from './logo.svg';\nimport './App.css';\nimport { useDispatch} from 'react-redux';\nimport { setToken, setUser } from './redux/actions';\nimport ApplicationRoutes from './ApplicationRoutes';\n\nfunction App() {\n  /*const token = useSelector(state => state.token);\n  const dispatch = useDispatch();\n  return (\n    <>\n    hey + {token}\n    <br/>\n    <button onClick={()=> dispatch(setToken(\"newtoken1\"))}>setToken</button>\n    </>\n  );*/   \n  const dispatch = useDispatch();\n  \n  if(localStorage.getItem(\"token\")){   \n    dispatch(setToken(localStorage.getItem(\"token\")));\n    dispatch(setUser(localStorage.getItem(\"user\")));\n  }\n\n /* const dispatch = useDispatch();\n  dispatch(setToken(localStorage.getItem(\"token\")));*/\n    return ApplicationRoutes();\n  \n}\n\nexport default App;\n","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\redux\\reducers.js",[],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\redux\\setReducers.js",["91"],"\r\nconst { combineReducers } = require(\"redux\");\r\nconst {setAuth, setUserInfo, setOrderList, setPanelList, setDisplay, setRestaurantMenu } = require(\"./reducers\");\r\n\r\n\r\n\r\n\r\nconst setReducers = combineReducers({\r\n    token : setAuth,\r\n    user : setUserInfo,\r\n    orders : setOrderList,\r\n    display : setDisplay,\r\n    menu : setRestaurantMenu\r\n})\r\n\r\nexport default setReducers;","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\redux\\actions.js",[],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\ApplicationRoutes.js",["92","93","94"],"\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport LoginPage from \"./components/mainFrames/LoginPage\";\r\nimport MainPage from \"./components/mainFrames/MainPage\";\r\nimport { useSelector } from \"react-redux\";\r\nimport RegisterPage from \"./components/mainFrames/RegisterPage\";\r\n\r\nconst ApplicationRoutes = () => {\r\n\r\n\r\n  const [collapse, setCollapse] = useState(false);\r\n\r\n  const handleToggle = (event) => {\r\n    event.preventDefault();\r\n    collapse ? setCollapse(false) : setCollapse(true);\r\n  };\r\n\r\n  const token = useSelector(state => state.token);\r\n\r\n  return (\r\n    <Router>      \r\n              { (token != 1) ? (\r\n                //Autheticated Routing\r\n                <Switch>\r\n                   <Route path=\"/mainPage\" component={MainPage}/>\r\n                   <Redirect from=\"/login\" to=\"/mainPage\" /> \r\n                   <Redirect from=\"/register\" to=\"/mainPage\" />                   \r\n                   <Redirect from=\"/\" to=\"/mainPage\" />\r\n                </Switch>\r\n              ) :  (\r\n                //Unauthenticated Routing\r\n                <Switch>\r\n                  <Route path=\"/login\" component={LoginPage} />\r\n                  <Route path=\"/register\" component={RegisterPage} />                  \r\n                  <Redirect from=\"/mainPage\" to=\"/login\" /> \r\n                  <Redirect from=\"/\" to=\"/login\" /> \r\n                </Switch>\r\n              \r\n                  )}\r\n                  \r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default ApplicationRoutes;\r\n","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainFrames\\LoginPage.js",["95"],"import { Button, TextField, withStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { login } from '../../requests/auth';\r\nimport {setToken, setUser} from '../../redux/actions'\r\nimport { getUserInfo } from '../../requests/restaurant';\r\n\r\n\r\n\r\nclass LoginPage extends React.Component{\r\n    \r\n    state = {\r\n        loading : false\r\n    };\r\n\r\n    login = () => {\r\n        const { history } = this.props;\r\n\r\n\r\n        login(this.username.value,this.password.value).then((response)=>{\r\n            this.setState({loading : true});\r\n            if(response){            \r\n                this.props.dispatch(setToken(response.token));\r\n                getUserInfo(this.props.token).then((result)=>{\r\n                    console.log(result);\r\n                    this.props.dispatch(setUser(result));\r\n                    this.setState({loading:true});\r\n                    history.push(\"/mainPage\");\r\n                });\r\n            } else{\r\n                \r\n            }\r\n                       \r\n        }).catch((error)=>{\r\n            console.log(\"error is : \" + error );\r\n        });       \r\n\r\n    }\r\n\r\n    register = () => {\r\n        const { history } = this.props;\r\n        history.push(\"/register\");\r\n    }\r\n\r\n    render(){\r\n        const {classes } = this.props;\r\n\r\n        const {loading} = this.state;\r\n\r\n        \r\n        return(\r\n        <div className=\"App\">\r\n          <header className=\"App-Header\">\r\n              <h1 className=\"title\">Qrder</h1>\r\n        </header>\r\n        <body className=\"App-body\">\r\n        <div className=\"Panel\"> \r\n          <div className=\"LoginPanel\">\r\n            {loading ? (<>\r\n            loging in...</>\r\n                ):(\r\n                     <>\r\n            <TextField id=\"username\" label = \"Username\" \r\n            defaultValue = \"postman\"\r\n            className = {classes.main}\r\n            inputRef={el => this.username = el} \r\n            InputProps={{\r\n                    classes:{\r\n                        input:classes.font\r\n                    }\r\n                }}\r\n                InputLabelProps={{\r\n                    classes:{\r\n                        root: classes.font,\r\n                    }\r\n                }}\r\n\r\n                 />\r\n                 <br/>\r\n                 <br/>\r\n                  <TextField id=\"password\" label = \"Password\" \r\n                  defaultValue = \"postman\"\r\n                  type=\"password\"\r\n                  inputRef={el => this.password = el} \r\n                    className = {classes.main}\r\n                    InputProps={{\r\n                            classes:{\r\n                                input:classes.font\r\n                            }\r\n                        }}\r\n                        InputLabelProps={{\r\n                            classes:{\r\n                                root: classes.font,\r\n                            }\r\n                        }}\r\n                 ><input type=\"password\"/></TextField>                 \r\n                 <br/>\r\n                 <br/>\r\n                 <span className=\"ButtonLayout\">\r\n                 <Button\r\n                    classes={{\r\n                        root: classes.buttonRoot, // class name, e.g. `classes-nesting-root-x`\r\n                        label: classes.buttonLabel, // class name, e.g. `classes-nesting-label-x`\r\n                    }}\r\n                    onClick={this.login}\r\n                >login</Button>\r\n                </span>\r\n                <span className=\"ButtonLayout\">\r\n                <Button\r\n                    classes={{\r\n                        root: classes.buttonRoot, // class name, e.g. `classes-nesting-root-x`\r\n                        label: classes.buttonLabel, // class name, e.g. `classes-nesting-label-x`\r\n                    }}\r\n                    onClick={this.register}\r\n                >SignUp</Button>\r\n                </span></>\r\n                )}\r\n           \r\n          </div>\r\n          </div>\r\n        </body>\r\n        \r\n      </div>)\r\n        \r\n    }\r\n}\r\n\r\nconst useStyles = {\r\n    main:{\r\n        '& label.Mui-focused': {\r\n            color: '#c4a748d0',\r\n          },          \r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#c4a748d0',\r\n      },\r\n    },\r\n    font:{\r\n        color : \"#c4a748d0\",\r\n        '&:-webkit-autofill': {\r\n            transitionDelay: '9999s',\r\n            transitionProperty: 'background-color, color',\r\n          },\r\n    },\r\n    buttonRoot: {\r\n        background: 'linear-gradient(45deg, #c4a748d0 30%, #c4a748d0 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'black',\r\n        height: 48,\r\n        padding: '0 30px',\r\n      },\r\n    buttonLabel: {\r\n        textTransform: 'capitalize',\r\n    },\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    token : state.token,\r\n    user : state.user\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(withRouter(withStyles(useStyles)(LoginPage)));","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\serviceWorker.js",[],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\requests\\auth.js",[],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\requests\\restaurant.js",[],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainFrames\\MainPage.js",["96","97"],"import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Tabs,\r\n  Tab,\r\n  Box,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LeftDrawer from \"../drawers/LeftDrawer\";\r\nimport RightDrawer from \"../drawers/RightDrawer\";\r\nimport OrderPanel from \"../mainPanels/OrderPanel\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDisplayingPanel } from \"../../redux/actions\";\r\n\r\n\r\n\r\nclass MainPage extends React.Component {\r\n  state = {\r\n    value: 0,\r\n    drawerStyle:null\r\n  };\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  handleTabChange = (event, newValue) => {\r\n    this.setState({ value: newValue });\r\n    if(newValue == 0){\r\n      this.props.dispatch(setDisplayingPanel(null));\r\n    }else{\r\n      this.props.dispatch(setDisplayingPanel(\r\n        <OrderPanel/>));\r\n    }\r\n  };\r\n\r\n  setDisplay = (display)=>{\r\n      this.props.dispatch(setDisplayingPanel(display))\r\n  }\r\n\r\n  render() {\r\n\r\n    console.log(\"hi\");\r\n    \r\n\r\n    return (\r\n        <div className=\"App\">   \r\n        \r\n        <div className = \"App-Main\">\r\n          <LeftDrawer/> \r\n          <RightDrawer/>    \r\n          <header className=\"App-Header\">\r\n                  <h1 className=\"title\">Qrder</h1>\r\n                  <AppBar position=\"static\" className=\"Tab-Length\">\r\n                    <Tabs\r\n                      value={this.state.value}\r\n                      onChange={this.handleTabChange.bind(this)}\r\n                      aria-label=\"simple tabs example\"\r\n                      variant=\"fullWidth\"\r\n                      classes={{\r\n                        root: \"Tab-Color\",\r\n                        indicator: \"Indicator-Color\",\r\n                      }}\r\n                      indicatorColor=\"\"\r\n                    >\r\n                      <Tab label=\"Tables\" {...a11yProps(0)} />\r\n                      <Tab label=\"Orders\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n                  </AppBar>    \r\n          </header>\r\n          <body className=\"App-body\">\r\n            <div className=\"Panel\">\r\n              <div className=\"MainPanel\">\r\n                {this.props.display}                \r\n              </div>\r\n            </div>\r\n          </body>\r\n          \r\n          </div>    \r\n        </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  display : state.display\r\n})\r\nexport default connect(mapStateToProps,null)(withRouter(MainPage));\r\n","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\drawers\\LeftDrawer.js",["98","99","100","101","102"],"\r\nimport React from \"react\"\r\nimport {  Divider, Drawer,  List, ListItem, ListItemIcon, ListItemText,  withStyles } from \"@material-ui/core\";\r\n\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { AccountCircle,  Edit, Fastfood, MenuBook, Settings } from \"@material-ui/icons\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDisplayingPanel, setToken, setUser } from \"../../redux/actions\";\r\nimport ItemPanel from \"../mainPanels/ItemPanel\";\r\nimport MenuPanel from \"../mainPanels/MenuPanel\";\r\n\r\nclass LeftDrawer extends React.Component {\r\n\r\n  state ={\r\n    open : false\r\n  }\r\n\r\n  clickhandler(text){\r\n    \r\n    const { history ,match} = this.props;\r\n    switch(text){\r\n      case \"Logout\":\r\n        console.log(localStorage);\r\n        this.props.dispatch(setToken(\"1\"));\r\n        this.props.dispatch(setUser(\"\"));   \r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"user\");\r\n        \r\n        history.push(\"/login\");\r\n      case \"Menu\":\r\n        console.log(\"menu\");\r\n        this.props.dispatch(setDisplayingPanel(<MenuPanel/>));\r\n        break;\r\n      case \"AddItem\":        \r\n        console.log(\"item\");\r\n        this.props.dispatch(setDisplayingPanel(<ItemPanel/>));\r\n        break;\r\n      default:\r\n        alert(\"hi \" + text);\r\n        \r\n    }\r\n    /*if(text == \"Logout\"){ \r\n      console.log(localStorage);\r\n      this.props.dispatch(setToken(\"1\"));\r\n      this.props.dispatch(setUser(\"\"));   \r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n       \r\n      history.push(\"/login\");   \r\n    }else if(text == \"Menu\"){   \r\n      this.props.dispatch(setDisplayingPanel(<MenuPanel/>));\r\n\r\n    }else{      \r\n      alert(\"hi \" + text);\r\n      //alert(token);\r\n    }*/\r\n  }\r\n  \r\n  handleLogout(){\r\n      \r\n    const { history ,match} = this.props;\r\n\r\n    history.push(\"/mainPage\");\r\n\r\n  }\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({open:true});\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({open:false});\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    \r\n    const items = [{text:\"User\" , item:<AccountCircle style={{fontSize:145}}/>},\r\n                    {text : \"Edit\" , item:<Edit style={{fontSize:70}}/>,label:\"Edit\"},\r\n                   {text : \"Settings\" , item:<Settings style={{fontSize:70}}/>,label:\"Settings\"},\r\n                   {text : \"Menu\" , item:<MenuBook style={{fontSize:70}}/>,label:\"Menu\"},\r\n                   {text : \"AddItem\" , item:<Fastfood style={{fontSize:70}}/>,label:\"AddItem\"}];\r\n    return (\r\n      <Drawer anchor=\"left\"variant=\"permanent\" classes={{paper:classes.paper}}>\r\n          <div className=\"Drawer\">\r\n          <List >\r\n          {items.map((text,index) => (\r\n              <ListItem button key={text} onClick={()=>this.clickhandler(items[index].text)} classes={{root:classes.padding}}> \r\n                <ListItemIcon  classes={{root:classes.padding2}}style={{color:\"#c4a748d0\"}}>\r\n                  {items[index].item}\r\n                </ListItemIcon>  \r\n                <ListItemText ><p style={{marginLeft:\"10px\"}}>{items[index].label}</p></ListItemText>\r\n              </ListItem>\r\n            ))}\r\n         \r\n            \r\n          <Divider classes={{root: classes.divider}}/>\r\n              <ListItem button key=\"Logout\" onClick={()=>this.clickhandler(\"Logout\")} classes={{root:classes.padding}}style={{backgroundColor:\"#c4a748d0\"}}>\r\n                <ListItemIcon  classes={{root:classes.padding2}} style={{color:\"#282c34e8\"}}>\r\n                  <ExitToAppIcon style={{fontSize:70}}/> \r\n                </ListItemIcon>\r\n                <ListItemText><p style={{marginLeft:\"10px\"},{color : \"#282c34e8\"}}>Logout</p></ListItemText>\r\n              </ListItem>            \r\n          <Divider classes={{root: classes.divider}}/>\r\n          </List>\r\n          \r\n          </div>\r\n        </Drawer>\r\n    );\r\n  \r\n  }\r\n\r\n}\r\n\r\nconst useStyles ={\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  },\r\n  paper: {\r\n    backgroundColor: \"#282c34e8\",\r\n    overflowX: 'hidden',\r\n    width: 200,\r\n  },\r\n  paper2: {\r\n    backgroundColor: \"#ffffff\",\r\n    overflowX: 'hidden',\r\n    width: 200,\r\n  },\r\n  icon:{\r\n    backgroundColor:\"#c4a748d0\",\r\n    \r\n  },\r\n  padding:{\r\n    justifyContent:\"center\",\r\n    },\r\n    padding2:{\r\n      justifyContent:\"center\"\r\n    },\r\n    divider:{\r\n      backgroundColor:\"#c4a748d0\"\r\n    }\r\n  \r\n};\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  display : state.display\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(withRouter(withStyles(useStyles)(LeftDrawer)));","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\drawers\\RightDrawer.js",[],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\OrderPanel.js",["103","104","105"],"import React from \"react\";\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from \"@material-ui/core\";\r\nimport { AccountBalanceWallet, CheckBox, Face, HourglassFull } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { requestOrders } from \"../../requests/restaurant\";\r\nimport { setOrders } from \"../../redux/actions\";\r\n\r\nclass OrderPanel extends React.Component {\r\n  state = {\r\n    info: {\r\n      OrderCount: null,\r\n      orders: [{}],\r\n    },\r\n    page: null,\r\n    rowsPerPage : 10,\r\n  };\r\n\r\n  columns = [\r\n    {\r\n      id: \"table\",\r\n      label: \"Table\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n    {\r\n      id: \"time\",\r\n      label: \"Time\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n    {\r\n      id: \"status\",\r\n      label: \"Status\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n  ];\r\n\r\n /* columns = [\r\n    { id: 'name', label: 'Name', minWidth: 170 },\r\n    { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n    {\r\n      id: 'population',\r\n      label: 'Population',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'size',\r\n      label: 'Size\\u00a0(km\\u00b2)',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'density',\r\n      label: 'Density',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    },\r\n  ];\r\n*/\r\n \r\n  \r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({page:newPage});\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({rowsPerPage:+event.target.value});\r\n    this.setState({page:0});\r\n  };\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    //console.log(\"orderpanel : \" + this.props.token);\r\n    if(this.props.orders){\r\n      console.log(\"1\");\r\n    }\r\n    else{\r\n      requestOrders(this.props.token).then((response) => {\r\n        this.props.dispatch(setOrders(response.orders));\r\n      });\r\n    }\r\n    /*this.setState({info : getOrders()});\r\n    setInterval(function(){      \r\n      this.setState({info : getOrders()});\r\n    }.bind(this),10);*/\r\n  }\r\n\r\n  render() {\r\n    const {classes,rowsPerPage,page} = this.state;\r\n    const columns = this.columns;\r\n    const rows = this.state.info.orders;\r\n    const handleChangePage = this.handleChangePage.bind(this);\r\n    const handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\r\n    const icons = [<CheckBox style={{fontSize:\"40\"}}/>,<AccountBalanceWallet style={{fontSize:\"40\"}}/>,<Face  style={{fontSize:\"40\"}}/>,<HourglassFull  style={{fontSize:\"40\"}}/>];\r\n    return (\r\n      <div >\r\n        <TableContainer  className=\"Test2\">\r\n        <Table stickyHeader aria-label=\"sticky table\" >\r\n          <TableHead >\r\n            <TableRow >\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                  classes={{\r\n                    root:\"Chart-header-specs\"\r\n                  }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody  >\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align} >\r\n                        <div className=\"OrderCell\">                                                    \r\n                          {column.format && typeof value === 'number' ? column.format(value) : ((column.id == \"status\")?(icons[value-1]):(value))}\r\n                        </div>\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n      \r\n        rowsPerPageOptions={[ 10]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}  \r\n        className=\"Test3\"      \r\n        classes={{\r\n          root:\"Chart-header-specs\"\r\n        }}\r\n      />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  orders : state.orders\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(OrderPanel);\r\n\r\n","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainFrames\\RegisterPage.js",["106","107","108","109"],"import { Button, TextField, withStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { login, registration } from '../../requests/auth';\r\nimport {setToken, setUser} from '../../redux/actions'\r\nimport { getUserInfo } from '../../requests/restaurant';\r\n\r\n\r\n\r\nclass RegisterPage extends React.Component{\r\n    \r\n    state = {\r\n        loading : false\r\n    };\r\n\r\n    login = () => {\r\n        const values = {username:\"postman\", password : \"postman\"};\r\n        const { history } = this.props;\r\n\r\n\r\n        history.push(\"/login\");       \r\n\r\n    }\r\n\r\n    register = (formVars) => {\r\n        const { history } = this.props;\r\n        //console.log(formVars);\r\n        var values = [];\r\n        /*values[\"name\"]= this.name.value;\r\n        values[\"address\"]= this.address.value;\r\n        values[\"phoneNumber\"]= this.phoneNumber.value;\r\n        values[\"email\"]= this.email.value;\r\n        values[\"username\"]= this.username.value;\r\n        values[\"password\"]= this.password.value;*/\r\n        values[\"name\"]= formVars[0].id.value;\r\n        values[\"address\"]= formVars[1].id.value;\r\n        values[\"phoneNumber\"]= formVars[2].id.value;\r\n        values[\"email\"]= formVars[3].id.value;\r\n        values[\"username\"]= formVars[4].id.value;\r\n        values[\"password\"]= formVars[5].id.value;\r\n        console.log(values);\r\n        registration(values).then((response)=>{\r\n\r\n            console.log(response);\r\n            if(response.status == 200){\r\n                login(values[\"username\"],values[\"password\"]).then((response)=>{\r\n                    this.setState({loading : true});\r\n                    if(response){            \r\n                        this.props.dispatch(setToken(response.token));\r\n                        getUserInfo(this.props.token).then((result)=>{\r\n                            console.log(result);\r\n                            this.props.dispatch(setUser(result));\r\n                            this.setState({loading:true});\r\n                            history.push(\"/mainPage\");\r\n                        });\r\n                    } else{\r\n                        \r\n                    }\r\n                               \r\n                }).catch((error)=>{\r\n                    console.log(\"error is : \" + error );\r\n                });\r\n            }else{\r\n                //todo\r\n            }      \r\n        });\r\n        \r\n    }\r\n\r\n    render(){\r\n        const {classes } = this.props;\r\n\r\n        const {loading} = this.state;\r\n         /*const formVariables = [\r\n             {id:\"name\",label : \"Name\",type:\"text\"},\r\n             {id:\"address\",label : \"Address\",type:\"text\"},\r\n             {id:\"phoneNumber\",label : \"Phone Number\",type:\"tel\"},\r\n             {id:\"email\",label : \"Email\",type:\"email\"},\r\n             {id:\"username\",label : \"Username\",type:\"text\"},\r\n             {id:\"password\",label : \"Password\",type:\"password\"}];\r\n           */ \r\n          var formVariables = [\r\n            {name:\"name\", id:null,label : \"Name\",type:\"text\"},\r\n            {name : \"address\",id:null,label : \"Address\",type:\"text\"},\r\n            {name : \"phoneNumber\",id:null,label : \"Phone Number\",type:\"tel\"},\r\n            {name : \"email\",id:null,label : \"Email\",type:\"email\"},\r\n            {name : \"username\",id:null,label : \"Username\",type:\"text\"},\r\n            {name : \"password\",id:null,label : \"Password\",type:\"password\"}];\r\n         \r\n        //console.log(formVariables);\r\n        formVariables.map((index)=>{\r\n            console.log(index);\r\n        });\r\n        \r\n        return(\r\n        <div className=\"App\">\r\n          <header className=\"App-Header\">\r\n              <h1 className=\"title\">Qrder</h1>\r\n        </header>\r\n        <body className=\"App-body\">\r\n        <div className=\"RegisterMainPanel\"> \r\n          <div className=\"RegisterPanel\">\r\n            {loading ? (<>\r\n            signing up...</>\r\n                ):(\r\n                     <>\r\n            {formVariables.map((index)=>(\r\n                <>\r\n                <TextField id={index.name} label = {index.label} \r\n                type={index.type}\r\n                defaultValue = \"postman\"\r\n                inputRef={el =>index.id = el} \r\n                className = {classes.main}\r\n                InputProps={{\r\n                        classes:{\r\n                            input:classes.font\r\n                        }\r\n                    }}\r\n                    InputLabelProps={{\r\n                        classes:{\r\n                            root: classes.font,\r\n                        }\r\n                    }}\r\n                />                             \r\n                <br/>\r\n                <br/>\r\n                </>\r\n            ))}\r\n                \r\n                 <span className=\"ButtonLayout\">\r\n                 <Button\r\n                    classes={{\r\n                        root: classes.buttonRoot, // class name, e.g. `classes-nesting-root-x`\r\n                        label: classes.buttonLabel, // class name, e.g. `classes-nesting-label-x`\r\n                    }}\r\n                    onClick={this.register.bind(this,formVariables)}\r\n                >Register</Button>\r\n                </span>\r\n                <span className=\"ButtonLayout\">\r\n                <Button\r\n                    classes={{\r\n                        root: classes.buttonRoot, // class name, e.g. `classes-nesting-root-x`\r\n                        label: classes.buttonLabel, // class name, e.g. `classes-nesting-label-x`\r\n                    }}\r\n                    onClick={this.login}\r\n                >Back</Button>\r\n                </span></>\r\n                )}\r\n           \r\n          </div>\r\n          </div>\r\n        </body>\r\n        \r\n      </div>)\r\n        \r\n    }\r\n}\r\n\r\nconst useStyles = {\r\n    main:{\r\n        '& label.Mui-focused': {\r\n            color: '#000000',\r\n          },          \r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#000000',\r\n      },\r\n    },\r\n    font:{\r\n        color : \"#000000\",\r\n        '&:-webkit-autofill': {\r\n            transitionDelay: '9999s',\r\n            transitionProperty: 'background-color, color',\r\n          },\r\n    },\r\n    buttonRoot: {\r\n        background: 'linear-gradient(45deg, #282c34e8 30%, #282c34e8 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: \"#c4a748d0\",\r\n        height: 48,\r\n        padding: '0 30px',\r\n      },\r\n    buttonLabel: {\r\n        textTransform: 'capitalize',\r\n    },\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    token : state.token,\r\n    user : state.user\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,null)(withRouter(withStyles(useStyles)(RegisterPage)));","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\MenuPanel.js",["110","111","112","113","114","115","116","117"],"import React from \"react\";\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from \"@material-ui/core\";\r\nimport { AccountBalanceWallet, CheckBox, Face, HourglassFull } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { requestMenu, requestOrders } from \"../../requests/restaurant\";\r\nimport { setMenu, setOrders, setUser } from \"../../redux/actions\";\r\nimport { setRestaurantMenu } from \"../../redux/reducers\";\r\n\r\nclass MenuPanel extends React.Component {\r\n  state = {\r\n    info: {\r\n      OrderCount: null,\r\n      orders: [{}],\r\n    },\r\n    page: null,\r\n    rowsPerPage : 10,\r\n  };\r\n\r\n  columns = [\r\n    \r\n    {\r\n      id: \"image\",\r\n      label: \"Image\",\r\n      minWidth: 170,\r\n      align: \"left\"\r\n    },\r\n    {\r\n        id: \"name\",\r\n        label: \"Name\",\r\n        minWidth: 170,\r\n        align: \"left\",\r\n      },\r\n    {\r\n      id: \"price\",\r\n      label: \"Price\",\r\n      minWidth: 170,\r\n      align: \"center\",\r\n    },\r\n  ];\r\n\r\n /* columns = [\r\n    { id: 'name', label: 'Name', minWidth: 170 },\r\n    { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n    {\r\n      id: 'population',\r\n      label: 'Population',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'size',\r\n      label: 'Size\\u00a0(km\\u00b2)',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'density',\r\n      label: 'Density',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    },\r\n  ];\r\n*/\r\n \r\n  \r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({page:newPage});\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({rowsPerPage:+event.target.value});\r\n    this.setState({page:0});\r\n  };\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    //console.log(\"orderpanel : \" + this.props.token);\r\n\r\n    \r\n        \r\n      requestMenu(this.props.token).then((response) => {\r\n          this.props.dispatch(setMenu(response.data.menu));    \r\n      });\r\n      \r\n    \r\n    /*this.setState({info : getOrders()});\r\n    setInterval(function(){      \r\n      this.setState({info : getOrders()});\r\n    }.bind(this),10);*/\r\n  }\r\n\r\n  render() {\r\n    const {classes,rowsPerPage,page} = this.state;\r\n    const columns = this.columns;\r\n    const rows = this.props.menu;\r\n    const handleChangePage = this.handleChangePage.bind(this);\r\n    const handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\r\n    const icons = [<CheckBox style={{fontSize:\"40\"}}/>,<AccountBalanceWallet style={{fontSize:\"40\"}}/>,<Face  style={{fontSize:\"40\"}}/>,<HourglassFull  style={{fontSize:\"40\"}}/>];\r\n    return (\r\n      <div >\r\n        <TableContainer  className=\"Test2\">\r\n        <Table stickyHeader aria-label=\"sticky table\" >\r\n          <TableHead >\r\n            <TableRow >\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                  classes={{\r\n                    root:\"Chart-header-specs\"\r\n                  }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody  >\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align} >\r\n                        {(column.id == \"image\")?(<img alt={row.img} src={row.img} width =\"50\"/>):(<div className=\"OrderCell\">                                                    \r\n                          {column.format && typeof value === 'number' ? column.format(value) : ((column.id == \"status\")?(icons[value-1]):(value))}\r\n                        </div>)}\r\n                        \r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n      \r\n        rowsPerPageOptions={[ 10]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}  \r\n        className=\"Test3\"      \r\n        classes={{\r\n          root:\"Chart-header-specs\"\r\n        }}\r\n      />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  menu : state.menu,\r\n  order : state.test\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(MenuPanel);\r\n\r\n","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\ItemPanel.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import React from \"react\";\r\nimport { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TextField, withStyles } from \"@material-ui/core\";\r\nimport { AccountBalanceWallet, CheckBox, Face, HourglassFull } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItem, requestMenu, requestOrders } from \"../../requests/restaurant\";\r\nimport { setMenu, setOrders, setUser } from \"../../redux/actions\";\r\nimport { setRestaurantMenu } from \"../../redux/reducers\";\r\n\r\nclass ItemPanel extends React.Component {\r\n\r\n    state = {\r\n        loading : false\r\n    };\r\n\r\n    add = ()=> {\r\n            var values = [];\r\n            values[\"img\"]= this.img.value;\r\n            values[\"name\"]= this.name.value;\r\n            values[\"price\"]= this.price.value;\r\n            values[\"desc\"]= this.desc.value;\r\n            values[\"metadata\"]= this.metadata.value;\r\n            \r\n            addItem(values,this.props.token).then((response)=>{\r\n                console.log(response);\r\n            });\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        \r\n        const formVariables = [\r\n            {id:\"img\",label : \"Image(URL)\",type:\"text\"},\r\n            {id:\"name\",label : \"Name\",type:\"text\"},\r\n            {id:\"price\",label : \"Price\",type:\"text\"},\r\n            {id:\"desc\",label : \"Description\",type:\"text\"},\r\n            {id:\"metadata\",label : \"Optionals\",type:\"text\"}]\r\n        return (\r\n            <>\r\n            \r\n            {formVariables.map((index)=>(\r\n                    <>\r\n                    <TextField id={index.id} label = {index.label} \r\n                    type={index.type}\r\n                    inputRef={el =>eval(\"this.\" + index.id + \"= el\")} \r\n                    className = {classes.main}\r\n                    InputProps={{\r\n                            classes:{\r\n                                input:classes.font\r\n                            }\r\n                        }}\r\n                        InputLabelProps={{\r\n                            classes:{\r\n                                root: classes.font,\r\n                            }\r\n                        }}\r\n                    />                             \r\n                    <br/>\r\n                    <br/>\r\n                    </>\r\n                ))}\r\n                <span className=\"ButtonLayout\">\r\n                <Button\r\n                    classes={{\r\n                        root: classes.buttonRoot, // class name, e.g. `classes-nesting-root-x`\r\n                        label: classes.buttonLabel, // class name, e.g. `classes-nesting-label-x`\r\n                    }}\r\n                    onClick={this.add}\r\n                >Add</Button>\r\n                </span>\r\n                </>\r\n        );\r\n    }\r\n}\r\n\r\nconst useStyles = {\r\n    main:{\r\n        '& label.Mui-focused': {\r\n            color: '#c4a748d0',\r\n          },          \r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#c4a748d0',\r\n      },\r\n    },\r\n    font:{\r\n        color : \"#c4a748d0\",\r\n        '&:-webkit-autofill': {\r\n            transitionDelay: '9999s',\r\n            transitionProperty: 'background-color, color',\r\n          },\r\n    },\r\n    buttonRoot: {\r\n        background: 'linear-gradient(45deg, #c4a748d0 30%, #c4a748d0 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'black',\r\n        height: 48,\r\n        padding: '0 30px',\r\n      },\r\n    buttonLabel: {\r\n        textTransform: 'capitalize',\r\n    },\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  menu : state.menu,\r\n  order : state.test\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(withStyles(useStyles)(ItemPanel));\r\n\r\n",{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"137","replacedBy":"141"},{"ruleId":"139","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":1,"column":8,"nodeType":"145","messageId":"146","endLine":1,"endColumn":12},{"ruleId":"143","severity":1,"message":"147","line":3,"column":44,"nodeType":"145","messageId":"146","endLine":3,"endColumn":56},{"ruleId":"143","severity":1,"message":"148","line":2,"column":17,"nodeType":"145","messageId":"146","endLine":2,"endColumn":26},{"ruleId":"143","severity":1,"message":"149","line":20,"column":9,"nodeType":"145","messageId":"146","endLine":20,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":29,"column":24,"nodeType":"152","messageId":"153","endLine":29,"endColumn":26},{"ruleId":"143","severity":1,"message":"154","line":3,"column":19,"nodeType":"145","messageId":"146","endLine":3,"endColumn":30},{"ruleId":"150","severity":1,"message":"155","line":30,"column":17,"nodeType":"152","messageId":"153","endLine":30,"endColumn":19},{"ruleId":"143","severity":1,"message":"156","line":94,"column":10,"nodeType":"145","messageId":"146","endLine":94,"endColumn":18},{"ruleId":"143","severity":1,"message":"157","line":21,"column":22,"nodeType":"145","messageId":"146","endLine":21,"endColumn":27},{"ruleId":"158","severity":1,"message":"159","line":31,"column":7,"nodeType":"160","messageId":"161","endLine":34,"endColumn":15},{"ruleId":"143","severity":1,"message":"157","line":62,"column":22,"nodeType":"145","messageId":"146","endLine":62,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":103,"column":60,"nodeType":"164","messageId":"165","endLine":103,"endColumn":61},{"ruleId":"143","severity":1,"message":"166","line":149,"column":7,"nodeType":"145","messageId":"146","endLine":149,"endColumn":18},{"ruleId":"143","severity":1,"message":"167","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":15},{"ruleId":"143","severity":1,"message":"168","line":95,"column":12,"nodeType":"145","messageId":"146","endLine":95,"endColumn":19},{"ruleId":"150","severity":1,"message":"155","line":130,"column":108,"nodeType":"152","messageId":"153","endLine":130,"endColumn":110},{"ruleId":"143","severity":1,"message":"154","line":3,"column":19,"nodeType":"145","messageId":"146","endLine":3,"endColumn":30},{"ruleId":"143","severity":1,"message":"169","line":18,"column":15,"nodeType":"145","messageId":"146","endLine":18,"endColumn":21},{"ruleId":"150","severity":1,"message":"155","line":46,"column":32,"nodeType":"152","messageId":"153","endLine":46,"endColumn":34},{"ruleId":"170","severity":1,"message":"171","line":92,"column":34,"nodeType":"172","messageId":"173","endLine":92,"endColumn":36},{"ruleId":"143","severity":1,"message":"167","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":15},{"ruleId":"143","severity":1,"message":"174","line":5,"column":23,"nodeType":"145","messageId":"146","endLine":5,"endColumn":36},{"ruleId":"143","severity":1,"message":"175","line":6,"column":19,"nodeType":"145","messageId":"146","endLine":6,"endColumn":28},{"ruleId":"143","severity":1,"message":"176","line":6,"column":30,"nodeType":"145","messageId":"146","endLine":6,"endColumn":37},{"ruleId":"143","severity":1,"message":"177","line":7,"column":10,"nodeType":"145","messageId":"146","endLine":7,"endColumn":27},{"ruleId":"143","severity":1,"message":"168","line":97,"column":12,"nodeType":"145","messageId":"146","endLine":97,"endColumn":19},{"ruleId":"150","severity":1,"message":"155","line":131,"column":37,"nodeType":"152","messageId":"153","endLine":131,"endColumn":39},{"ruleId":"150","severity":1,"message":"155","line":132,"column":108,"nodeType":"152","messageId":"153","endLine":132,"endColumn":110},{"ruleId":"143","severity":1,"message":"167","line":2,"column":18,"nodeType":"145","messageId":"146","endLine":2,"endColumn":23},{"ruleId":"143","severity":1,"message":"178","line":2,"column":25,"nodeType":"145","messageId":"146","endLine":2,"endColumn":30},{"ruleId":"143","severity":1,"message":"179","line":2,"column":32,"nodeType":"145","messageId":"146","endLine":2,"endColumn":41},{"ruleId":"143","severity":1,"message":"180","line":2,"column":43,"nodeType":"145","messageId":"146","endLine":2,"endColumn":52},{"ruleId":"143","severity":1,"message":"181","line":2,"column":54,"nodeType":"145","messageId":"146","endLine":2,"endColumn":68},{"ruleId":"143","severity":1,"message":"182","line":2,"column":70,"nodeType":"145","messageId":"146","endLine":2,"endColumn":79},{"ruleId":"143","severity":1,"message":"183","line":2,"column":81,"nodeType":"145","messageId":"146","endLine":2,"endColumn":96},{"ruleId":"143","severity":1,"message":"184","line":2,"column":98,"nodeType":"145","messageId":"146","endLine":2,"endColumn":106},{"ruleId":"143","severity":1,"message":"185","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":30},{"ruleId":"143","severity":1,"message":"186","line":3,"column":32,"nodeType":"145","messageId":"146","endLine":3,"endColumn":40},{"ruleId":"143","severity":1,"message":"187","line":3,"column":42,"nodeType":"145","messageId":"146","endLine":3,"endColumn":46},{"ruleId":"143","severity":1,"message":"188","line":3,"column":48,"nodeType":"145","messageId":"146","endLine":3,"endColumn":61},{"ruleId":"143","severity":1,"message":"189","line":5,"column":19,"nodeType":"145","messageId":"146","endLine":5,"endColumn":30},{"ruleId":"143","severity":1,"message":"174","line":5,"column":32,"nodeType":"145","messageId":"146","endLine":5,"endColumn":45},{"ruleId":"143","severity":1,"message":"190","line":6,"column":10,"nodeType":"145","messageId":"146","endLine":6,"endColumn":17},{"ruleId":"143","severity":1,"message":"175","line":6,"column":19,"nodeType":"145","messageId":"146","endLine":6,"endColumn":28},{"ruleId":"143","severity":1,"message":"176","line":6,"column":30,"nodeType":"145","messageId":"146","endLine":6,"endColumn":37},{"ruleId":"143","severity":1,"message":"177","line":7,"column":10,"nodeType":"145","messageId":"146","endLine":7,"endColumn":27},{"ruleId":"191","severity":1,"message":"192","line":48,"column":36,"nodeType":"193","messageId":"153","endLine":48,"endColumn":40},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],["194"],["195"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setPanelList' is assigned a value but never used.","'useEffect' is defined but never used.","'handleToggle' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useDispatch' is defined but never used.","Expected '===' and instead saw '=='.","'TabPanel' is defined but never used.","'match' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'drawerWidth' is assigned a value but never used.","'Paper' is defined but never used.","'classes' is assigned a value but never used.","'values' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'requestOrders' is defined but never used.","'setOrders' is defined but never used.","'setUser' is defined but never used.","'setRestaurantMenu' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TablePagination' is defined but never used.","'TableRow' is defined but never used.","'AccountBalanceWallet' is defined but never used.","'CheckBox' is defined but never used.","'Face' is defined but never used.","'HourglassFull' is defined but never used.","'requestMenu' is defined but never used.","'setMenu' is defined but never used.","no-eval","eval can be harmful.","CallExpression","no-global-assign","no-unsafe-negation"]