[{"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\index.js":"1","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\reportWebVitals.js":"2","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\App.js":"3","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\redux\\reducers.js":"4","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\redux\\setReducers.js":"5","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\redux\\actions.js":"6","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\ApplicationRoutes.js":"7","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainFrames\\LoginPage.js":"8","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\serviceWorker.js":"9","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\requests\\auth.js":"10","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\requests\\restaurant.js":"11","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainFrames\\MainPage.js":"12","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\drawers\\LeftDrawer.js":"13","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\drawers\\RightDrawer.js":"14","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\OrderPanel.js":"15","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainFrames\\RegisterPage.js":"16","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\MenuPanel.js":"17","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\Item\\ItemPanel.js":"18","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\Item\\ItemDetailsPanel.js":"19","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\order\\OrderCreatePanel.js":"20","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\Item\\ItemsPanel.js":"21","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\Item\\MiniItemPanel.js":"22","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\tables\\TablePanel.js":"23","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\tables\\Table.js":"24","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\tables\\TableDetails.js":"25","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\order\\MiniOrderPanel.js":"26","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\tables\\MiniServicePanel.js":"27","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\ProfileEditPanel.js":"28"},{"size":804,"mtime":1607454930932,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":1067,"mtime":1608177099275,"results":"32","hashOfConfig":"30"},{"size":1666,"mtime":1608017508232,"results":"33","hashOfConfig":"30"},{"size":492,"mtime":1608017536696,"results":"34","hashOfConfig":"30"},{"size":1030,"mtime":1608021191281,"results":"35","hashOfConfig":"30"},{"size":1649,"mtime":1608075939655,"results":"36","hashOfConfig":"30"},{"size":5742,"mtime":1608175210621,"results":"37","hashOfConfig":"30"},{"size":5086,"mtime":499162500000,"results":"38","hashOfConfig":"30"},{"size":1411,"mtime":1607561283506,"results":"39","hashOfConfig":"30"},{"size":5994,"mtime":1608022335654,"results":"40","hashOfConfig":"30"},{"size":3231,"mtime":1608175267961,"results":"41","hashOfConfig":"30"},{"size":5151,"mtime":1608167383325,"results":"42","hashOfConfig":"30"},{"size":3246,"mtime":1608176792175,"results":"43","hashOfConfig":"30"},{"size":5414,"mtime":1608175656464,"results":"44","hashOfConfig":"30"},{"size":7624,"mtime":1608169498739,"results":"45","hashOfConfig":"30"},{"size":7486,"mtime":1608014977696,"results":"46","hashOfConfig":"30"},{"size":11261,"mtime":1608166446512,"results":"47","hashOfConfig":"30"},{"size":4595,"mtime":1607993506281,"results":"48","hashOfConfig":"30"},{"size":11144,"mtime":1608177080445,"results":"49","hashOfConfig":"30"},{"size":4930,"mtime":1608022343591,"results":"50","hashOfConfig":"30"},{"size":4821,"mtime":1608131451951,"results":"51","hashOfConfig":"30"},{"size":4640,"mtime":1608014936076,"results":"52","hashOfConfig":"30"},{"size":4222,"mtime":1608156539849,"results":"53","hashOfConfig":"30"},{"size":9435,"mtime":1608165995863,"results":"54","hashOfConfig":"30"},{"size":4457,"mtime":1608165569668,"results":"55","hashOfConfig":"30"},{"size":4693,"mtime":1608087160780,"results":"56","hashOfConfig":"30"},{"size":11403,"mtime":1608169658379,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"ne4954",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"60"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"60"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"60"},"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\index.js",[],["133","134"],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\reportWebVitals.js",[],["135","136"],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\App.js",["137","138","139"],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\redux\\reducers.js",[],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\redux\\setReducers.js",["140"],"\r\nconst { combineReducers } = require(\"redux\");\r\nconst {setAuth, setUserInfo, setOrderList, setPanelList, setDisplay, setRestaurantMenu, setRestaurantTables, setTabDisplayValue } = require(\"./reducers\");\r\n\r\n\r\n\r\n\r\nconst setReducers = combineReducers({\r\n    token : setAuth,\r\n    user : setUserInfo,\r\n    orders : setOrderList,\r\n    display : setDisplay,\r\n    menu : setRestaurantMenu,\r\n    tables : setRestaurantTables,\r\n    displayValue : setTabDisplayValue\r\n})\r\n\r\nexport default setReducers;","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\redux\\actions.js",[],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\ApplicationRoutes.js",["141","142","143","144"],"\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport LoginPage from \"./components/mainFrames/LoginPage\";\r\nimport MainPage from \"./components/mainFrames/MainPage\";\r\nimport { useSelector } from \"react-redux\";\r\nimport RegisterPage from \"./components/mainFrames/RegisterPage\";\r\n\r\nconst ApplicationRoutes = () => {\r\n\r\n\r\n  const [collapse, setCollapse] = useState(false);\r\n\r\n  const handleToggle = (event) => {\r\n    event.preventDefault();\r\n    collapse ? setCollapse(false) : setCollapse(true);\r\n  };\r\n\r\n  const token = useSelector(state => state.token);\r\n\r\n  return (\r\n    <Router>      \r\n              { (token != 1 && token != \"undefined\") ? (\r\n                //Autheticated Routing\r\n                <Switch>\r\n                   <Route path=\"/mainPage\" component={MainPage}/>\r\n                   <Redirect from=\"/login\" to=\"/mainPage\" /> \r\n                   <Redirect from=\"/register\" to=\"/mainPage\" />                   \r\n                   <Redirect from=\"/\" to=\"/mainPage\" />\r\n                </Switch>\r\n              ) :  (\r\n                //Unauthenticated Routing\r\n                <Switch>\r\n                  <Route path=\"/login\" component={LoginPage} />\r\n                  <Route path=\"/register\" component={RegisterPage} />                  \r\n                  <Redirect from=\"/mainPage\" to=\"/login\" /> \r\n                  <Redirect from=\"/\" to=\"/login\" /> \r\n                </Switch>\r\n              \r\n                  )}\r\n                  \r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default ApplicationRoutes;\r\n","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainFrames\\LoginPage.js",["145","146"],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\serviceWorker.js",[],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\requests\\auth.js",[],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\requests\\restaurant.js",["147"],"var axios = require('axios');\r\n\r\n\r\nexport const getUserInfo = (token) => {\r\n\r\n    var config = {\r\n        method: 'get',\r\n        url: 'https://qrder-web.herokuapp.com/restaurant/me',\r\n        headers: { \r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      };\r\n      \r\n      return axios(config)\r\n      .then(function (response) {\r\n        console.log(\"here\");\r\n        return response.data;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n\r\n}\r\n\r\nexport const requestOrders = (token) =>{\r\n    var config = {\r\n      method: 'get',\r\n      url: 'https://qrder-web.herokuapp.com/restaurant/orders',\r\n      headers: { \r\n        'Authorization':  `Bearer ${token}`\r\n      }\r\n    };\r\n\r\n    return axios(config)\r\n    .then(function (response) {\r\n      return response.data;\r\n    })\r\n    .catch(function (error) {\r\n      return error\r\n    });\r\n\r\n}\r\n\r\nexport const requestMenu = (token) =>{\r\n  var config = {\r\n    method: 'get',\r\n    url: 'https://qrder-web.herokuapp.com/restaurant/menu',\r\n    headers: { \r\n      'Authorization':  `Bearer ${token}`\r\n    }\r\n  };\r\n  \r\n  return axios(config)\r\n  .then(function (response) {\r\n    console.log(JSON.stringify(response.data));\r\n    return response;\r\n  })\r\n  .catch(function (error) {\r\n    console.log(error);\r\n  });\r\n  \r\n} \r\n\r\nexport const addItem = (values,token) =>{\r\n    var qs = require('qs');\r\n    var data = qs.stringify({\r\n    'name': values[\"name\"],\r\n    'price': values[\"price\"],\r\n    'desc': values[\"desc\"],\r\n    'metadata': values[\"metadata\"],\r\n    'img': values[\"img\"],\r\n    'subtopicUuid' : values[\"subtopicUuid\"]\r\n    });\r\n    var config = {\r\n      method: 'post',\r\n      url: 'https://qrder-web.herokuapp.com/restaurant/item',\r\n      headers: { \r\n        'Authorization': `Bearer ${token}`, \r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },\r\n      data : data\r\n    };\r\n\r\n    return axios(config)\r\n    .then(function (response) {\r\n      return response;\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      return error.response.data || error.response || error;\r\n    });\r\n}\r\n\r\nexport const UpdateItem = (values,token, uuid) =>{\r\n  var qs = require('qs');\r\n  var data = qs.stringify({\r\n    'name': values[\"name\"],\r\n    'price': values[\"price\"],\r\n    'desc': values[\"desc\"],\r\n    'metadata': values[\"metadata\"],\r\n    'img': values[\"img\"],    \r\n    'subtopicUuid' : values[\"subtopicUuid\"]\r\n  });\r\n  var config = {\r\n    method: 'post',\r\n    url: `https://qrder-web.herokuapp.com/restaurant/item?itemUuid=${uuid}`,\r\n    headers: { \r\n      'Authorization': `Bearer ${token}`, \r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    data : data\r\n  };\r\n\r\n  return axios(config)\r\n  .then(function (response) {\r\n    console.log(JSON.stringify(response.data));\r\n    return response;\r\n  })\r\n  .catch(function (error) {    \r\n    return error.response.data || error.response || error;\r\n  });\r\n}\r\n\r\nexport const removeItem = (uuid,token)=>{\r\n  var config = {\r\n    method: 'delete',\r\n    url: `https://qrder-web.herokuapp.com/restaurant/item?uuid=${uuid}`,\r\n    headers: { \r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  };\r\n  \r\n  return axios(config)\r\n  .then(function (response) {    \r\n    //console.log(JSON.stringify(response.data));\r\n    return response;\r\n  })\r\n  .catch(function (error) {\r\n    console.log(error);\r\n  });\r\n}\r\n\r\nexport const addOrder = (token,order) =>{\r\n\r\n  var tempItems = [];\r\n\r\n  order.items.map((item)=>{\r\n    console.log(item);\r\n    tempItems.push({\"uuid\":item.uuid,\"metadata\":item.metadata,\"quantity\" : `${item.quantity}`});\r\n  });\r\n  console.log(tempItems);\r\n\r\n  var data = JSON.stringify({\r\n    \"restaurantUuid\":\"56bc78e9-05fd-454c-99ad-18d479aa8ad9\",\r\n    \"userUuid\":\"3d9b7b60-741f-45aa-b94a-68daa30b7ea6\",\r\n    \"table_id\":\"af92bacf-a01a-4903-99d6-2887359c1d23\",\r\n    \"items\":tempItems});\r\n\r\n  var config = {\r\n    method: 'post',\r\n    url: 'https://qrder-web.herokuapp.com/order/new',\r\n    headers: { \r\n      'Content-Type': 'application/json', \r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n    data : data\r\n  };\r\n\r\n  return axios(config)\r\n  .then(function (response) {\r\n    console.log(JSON.stringify(response.data));\r\n    return response;\r\n  })\r\n  .catch(function (error) {\r\n    console.log(error);\r\n  });\r\n}\r\n\r\nexport const addSubtopic = (name,token) =>{\r\n  var qs = require('qs');\r\n  var data = qs.stringify({\r\n   'name': name \r\n  });\r\n  var config = {\r\n    method: 'post',\r\n    url: 'https://qrder-web.herokuapp.com/restaurant/subtopic',\r\n    headers: {       \r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    data : data\r\n  };\r\n  \r\n  return axios(config)\r\n  .then(function (response) {\r\n    //console.log(JSON.stringify(response.data));\r\n    return response;\r\n  })\r\n  .catch(function (error) {\r\n    return error;\r\n    //console.log(error);\r\n  });\r\n}\r\n\r\n\r\nexport const getTablesRequest = (token) =>{\r\n  var config = {\r\n    method: 'get',\r\n    url: 'https://qrder-web.herokuapp.com/restaurant/tables',\r\n    headers: { \r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  };\r\n  \r\n  return axios(config)\r\n  .then(function (response) {\r\n    console.log(JSON.stringify(response.data));\r\n    return response;\r\n  })\r\n  .catch(function (error) {\r\n    console.log(error);\r\n      return error;\r\n    \r\n  });\r\n  \r\n}\r\n\r\nexport const createTable = (name,token) =>{\r\n    var qs = require('qs');\r\n    var data = qs.stringify({\r\n    'name': name \r\n    });\r\n    var config = {\r\n      method: 'post',\r\n      url: 'https://qrder-web.herokuapp.com/restaurant/tables',\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },\r\n      data : data\r\n    };\r\n\r\n    return axios(config)\r\n    .then(function (response) {\r\n      //console.log(JSON.stringify(response.data));\r\n      return response;\r\n    })\r\n    .catch(function (error) {\r\n      //console.log(error);\r\n      return error;\r\n    });\r\n\r\n}","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainFrames\\MainPage.js",["148","149","150"],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\drawers\\LeftDrawer.js",["151","152","153","154","155","156"],"\r\nimport React from \"react\"\r\nimport {  Divider, Drawer,  List, ListItem, ListItemIcon, ListItemText,  withStyles } from \"@material-ui/core\";\r\n\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { AccountCircle,  Edit, Fastfood, MenuBook, Settings } from \"@material-ui/icons\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDisplayingPanel, setToken, setUser } from \"../../redux/actions\";\r\nimport MenuPanel from \"../mainPanels/MenuPanel\";\r\nimport ItemPanel from \"../mainPanels/Item/ItemPanel\";\r\nimport OrderCreatePanel from \"../mainPanels/order/OrderCreatePanel\";\r\nimport ProfileEditPanel from \"../mainPanels/ProfileEditPanel\";\r\n\r\nclass LeftDrawer extends React.Component {\r\n\r\n  state ={\r\n    open : false\r\n  }\r\n\r\n  clickhandler(text){\r\n    \r\n    const { history ,match} = this.props;\r\n    switch(text){\r\n      case \"Logout\":\r\n        console.log(localStorage);\r\n        this.props.dispatch(setToken(\"1\"));\r\n        this.props.dispatch(setUser(\"\"));   \r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"user\");\r\n        \r\n        history.push(\"/login\");\r\n      case \"Menu\":\r\n        console.log(\"menu\");\r\n        this.props.dispatch(setDisplayingPanel(<MenuPanel/>));\r\n        break;\r\n      case \"AddItem\":        \r\n        console.log(\"item\");\r\n        this.props.dispatch(setDisplayingPanel(<ItemPanel/>));\r\n        break;        \r\n      case \"AddOrder\":        \r\n        console.log(\"order\");        \r\n        this.props.dispatch(setDisplayingPanel(<OrderCreatePanel/>));\r\n        \r\n        break;\r\n      case \"Edit\":        \r\n        this.props.dispatch(setDisplayingPanel(<ProfileEditPanel/>));\r\n        break;\r\n      default:\r\n        alert(\"hi \" + text);\r\n        \r\n    }\r\n    /*if(text == \"Logout\"){ \r\n      console.log(localStorage);\r\n      this.props.dispatch(setToken(\"1\"));\r\n      this.props.dispatch(setUser(\"\"));   \r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n       \r\n      history.push(\"/login\");   \r\n    }else if(text == \"Menu\"){   \r\n      this.props.dispatch(setDisplayingPanel(<MenuPanel/>));\r\n\r\n    }else{      \r\n      alert(\"hi \" + text);\r\n      //alert(token);\r\n    }*/\r\n  }\r\n  \r\n  handleLogout(){\r\n      \r\n    const { history ,match} = this.props;\r\n\r\n    history.push(\"/mainPage\");\r\n\r\n  }\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({open:true});\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({open:false});\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    \r\n    const items = [{text:\"User\" , item:<AccountCircle style={{fontSize:145}}/>},\r\n                    {text : \"Edit\" , item:<Edit style={{fontSize:70}}/>,label:\"Edit\"},\r\n                   {text : \"Menu\" , item:<MenuBook style={{fontSize:70}}/>,label:\"Menu\"},\r\n                   {text : \"AddItem\" , item:<Fastfood style={{fontSize:70}}/>,label:\"AddItem\"},\r\n                   {text : \"AddOrder\" , item:<><Fastfood style={{fontSize:20}}/><Fastfood style={{fontSize:50}}/></>,label:\"AddOrder\"}];\r\n    return (\r\n      <Drawer anchor=\"left\"variant=\"permanent\" classes={{paper:classes.paper}}>\r\n          <div className=\"Drawer\">\r\n          <List >\r\n          {items.map((text,index) => (\r\n              <ListItem button key={text} onClick={()=>this.clickhandler(items[index].text)} classes={{root:classes.padding}}> \r\n                <ListItemIcon  classes={{root:classes.padding2}}style={{color:\"#c4a748d0\"}}>\r\n                  {items[index].item}\r\n                </ListItemIcon>  \r\n                <ListItemText ><p style={{marginLeft:\"10px\"}}>{items[index].label}</p></ListItemText>\r\n              </ListItem>\r\n            ))}\r\n         \r\n            \r\n          <Divider classes={{root: classes.divider}}/>\r\n              <ListItem button key=\"Logout\" onClick={()=>this.clickhandler(\"Logout\")} classes={{root:classes.padding}}style={{backgroundColor:\"#c4a748d0\"}}>\r\n                <ListItemIcon  classes={{root:classes.padding2}} style={{color:\"#282c34e8\"}}>\r\n                  <ExitToAppIcon style={{fontSize:70}}/> \r\n                </ListItemIcon>\r\n                <ListItemText><p style={{marginLeft:\"10px\"},{color : \"#282c34e8\"}}>Logout</p></ListItemText>\r\n              </ListItem>            \r\n          <Divider classes={{root: classes.divider}}/>\r\n          </List>\r\n          \r\n          </div>\r\n        </Drawer>\r\n    );\r\n  \r\n  }\r\n\r\n}\r\n\r\nconst useStyles ={\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  },\r\n  paper: {\r\n    backgroundColor: \"#282c34e8\",\r\n    overflowX: 'hidden',\r\n    width: 200,\r\n  },\r\n  paper2: {\r\n    backgroundColor: \"#ffffff\",\r\n    overflowX: 'hidden',\r\n    width: 200,\r\n  },\r\n  icon:{\r\n    backgroundColor:\"#c4a748d0\",\r\n    \r\n  },\r\n  padding:{\r\n    justifyContent:\"center\",\r\n    },\r\n    padding2:{\r\n      justifyContent:\"center\"\r\n    },\r\n    divider:{\r\n      backgroundColor:\"#c4a748d0\"\r\n    }\r\n  \r\n};\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  display : state.display\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(withRouter(withStyles(useStyles)(LeftDrawer)));","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\drawers\\RightDrawer.js",["157","158","159"],"import React from \"react\"\r\n\r\nimport {  Divider, Drawer, List, ListItem, ListItemIcon, ListItemText,  withStyles } from \"@material-ui/core\";\r\nimport { AccountBalanceWallet,  CheckBox,  Face,  HourglassFull } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport MainPage from \"../mainFrames/MainPage\";\r\nimport { setDisplayingPanel } from \"../../redux/actions\";\r\n\r\nclass RightDrawer extends React.Component {\r\n\r\n  state ={\r\n    open : false,\r\n    items : []\r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n\r\n  }\r\n\r\n  clickhandler(item){\r\n    alert(item.text + \" : \" + item.count );\r\n    \r\n  }\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({open:true});\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({open:false});\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    var items =[];\r\n    if(this.props.user != null){\r\n      if(this.props.user.restaurantType == \"normal\"){   \r\n        items = [{text:\"Done\" , item:<CheckBox style={{fontSize:90}}/>,count:3},\r\n        {text : \"Payment\" , item:<AccountBalanceWallet style={{fontSize:90}}/>,count : 5},\r\n        {text:\"Waiter\" , item:<Face style={{fontSize:90}}/>,count : 2},\r\n      {text : \"Waiting\" , item:<HourglassFull style={{fontSize:90}}/>,count : 4}];\r\n      }else{\r\n        items = [{text:\"Done\" , item:<CheckBox style={{fontSize:90}}/>,count:3},\r\n  {text : \"Waiting\" , item:<HourglassFull style={{fontSize:90}}/>,count : 4}];\r\n      }\r\n    }else{\r\n      \r\n    }\r\n    return (\r\n      <Drawer anchor=\"right\"variant=\"permanent\" classes={{paper:classes.paper}}>\r\n          <div className=\"Drawer\">\r\n          <List >\r\n            <ListItem>\r\n              <ListItemText style={{color:\"black\"}}><p style={{fontSize:15}}>Occupied Tables : 3<hr className=\"Test4\"/>Free Tables : 12<hr className=\"Test4\"/>Most Delayed Table: 10<hr className=\"Test4\"/></p></ListItemText>\r\n            </ListItem>\r\n            <Divider classes={{root : classes.divider}}/>\r\n          {items.map((text,index) => (\r\n            <>\r\n              <ListItem key={text} onClick={()=>this.clickhandler(items[index])} classes={{root:classes.padding}}> \r\n                 <ListItemIcon  style={{color:\"#282c34e8\"}}>\r\n                  {items[index].item}\r\n                </ListItemIcon>\r\n                <ListItemText style={{color:\"black\"}}><p style={{fontSize:30,marginLeft:\"40px\"}}>{items[index].count}</p></ListItemText>\r\n              </ListItem>\r\n              <Divider classes={{root : classes.divider}}/>\r\n              </>\r\n            ))}\r\n          </List>\r\n          </div>\r\n        </Drawer>\r\n    );\r\n  \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nconst useStyles ={\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  },\r\n  paper: {\r\n    \r\n    backgroundColor: \"#c4a748d0\",\r\n    overflowX: 'hidden',\r\n    width: 200,\r\n  },\r\n  icon:{\r\n    backgroundColor:\"#282c34e8\",\r\n    \r\n  },\r\n  padding:{\r\n    justifyContent:\"center\",\r\n    },\r\n    padding2:{\r\n      justifyContent:\"center\",\r\n      \r\n    },\r\n    divider:{\r\n      backgroundColor:\"black\"\r\n    }\r\n  \r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  display : state.display,\r\n  displayValue : state.value\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(withStyles(useStyles)(RightDrawer))","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\OrderPanel.js",["160","161","162","163","164","165","166","167"],"import React from \"react\";\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from \"@material-ui/core\";\r\nimport { AccountBalanceWallet, CheckBox, Face, HourglassFull, NotificationsActive } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { requestOrders } from \"../../requests/restaurant\";\r\nimport { setOrders } from \"../../redux/actions\";\r\n\r\nconst moment = require('moment');\r\n\r\nclass OrderPanel extends React.Component {\r\n  state = {\r\n    info: {\r\n      OrderCount: null,\r\n      orders: [{}],\r\n    },\r\n    page: 0,\r\n    rowsPerPage : 10,\r\n  };\r\n\r\n  columns = [\r\n    {\r\n      id: \"orderNo\",\r\n      label: \"Order No\",\r\n      minWidth: 170,\r\n      align: \"left\",\r\n    },\r\n    {\r\n      id: \"time\",\r\n      label: \"Time\",\r\n      minWidth: 170,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      id: \"status\",\r\n      label: \"Status\",\r\n      minWidth: 170,\r\n      align: \"right\",\r\n    },\r\n  ];\r\n \r\n  \r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({page:newPage});\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({rowsPerPage:+event.target.value});\r\n    this.setState({page:0});\r\n  };\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    //console.log(\"orderpanel : \" + this.props.token);\r\n    if(this.props.orders){\r\n      var temp = [];\r\n        this.props.orders.map((order,index)=>{\r\n            temp.push({orderNo:index+1,\r\n                time : moment().diff(moment(order.createdAt),\"minutes\"),\r\n                status : \"waiting\" });\r\n        })\r\n        this.setState({info:{OrderCount:this.props.orders.length,\r\n                      orders : temp}});\r\n    }\r\n    else{\r\n      requestOrders(this.props.token).then((response) => {\r\n        \r\n        this.props.dispatch(setOrders(response.orders));\r\n        var temp = [];\r\n        response.orders.map((order,index)=>{\r\n            temp.push({orderNo:index+1,\r\n                time : moment().diff(moment(order.createdAt),\"minutes\"),\r\n                status : (order.isPaid)?(\"served\"):(\"waiting\") });\r\n        })\r\n        temp.sort(function(a,b){return b.time-a.time});\r\n        this.setState({info:{OrderCount:response.orders.length,\r\n                      orders : temp}});\r\n      });\r\n    }\r\n    /*this.setState({info : getOrders()});\r\n    setInterval(function(){      \r\n      this.setState({info : getOrders()});\r\n    }.bind(this),10);*/\r\n  }\r\n\r\n  render() {\r\n    const {classes,rowsPerPage,page} = this.state;\r\n    const columns = this.columns;\r\n    const rows = this.state.info.orders;\r\n    const handleChangePage = this.handleChangePage.bind(this);\r\n    const handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\r\n    const icons = [];\r\n    \r\n    icons[\"waiting\"] = <HourglassFull  style={{fontSize:\"40\"}}/>;\r\n    if(this.props.user != null){\r\n      if(this.props.user.restaurantType != \"normal\"){        \r\n        icons[\"waiting\"] = <><HourglassFull  style={{fontSize:\"40\"}}/><NotificationsActive style={{fontSize:\"40\"}}/></>;\r\n      }\r\n    }\r\n    icons[\"served\"] = <CheckBox style={{fontSize:\"40\"}}/>;\r\n    //<CheckBox style={{fontSize:\"40\"}}/>,<AccountBalanceWallet style={{fontSize:\"40\"}}/>,<Face  style={{fontSize:\"40\"}}/>,<HourglassFull  style={{fontSize:\"40\"}}/>\r\n    return (\r\n      <div >\r\n        <TableContainer  className=\"Test2\">\r\n        <Table stickyHeader aria-label=\"sticky table\" >\r\n          <TableHead >\r\n            <TableRow >\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                  classes={{\r\n                    root:\"Chart-header-specs\"\r\n                  }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody  >\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row,index) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align} >\r\n                        <div className=\"OrderCell\">                                                    \r\n                          {column.format && typeof value === 'number' ? column.format(value) : ((column.id == \"status\")?(icons[value]):(value))}\r\n                          \r\n                        </div>\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n      \r\n        rowsPerPageOptions={[ 10]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}  \r\n        className=\"Test3\"      \r\n        classes={{\r\n          root:\"Chart-header-specs\"\r\n        }}\r\n      />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  orders : state.orders\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(OrderPanel);\r\n\r\n","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainFrames\\RegisterPage.js",["168","169","170","171"],"import { Button, Switch, TextField, withStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { login, registration } from '../../requests/auth';\r\nimport {setToken, setUser} from '../../redux/actions'\r\nimport { getUserInfo } from '../../requests/restaurant';\r\nimport { AccountBox, LocationOn, Mail, Note, Phone, VpnKey } from '@material-ui/icons';\r\n\r\n\r\n\r\nclass RegisterPage extends React.Component{\r\n    \r\n    state = {\r\n        loading : false,\r\n        type : \"normal\"\r\n    };\r\n\r\n    login = () => {\r\n        const values = {username:\"postman\", password : \"postman\"};\r\n        const { history } = this.props;\r\n\r\n\r\n        history.push(\"/login\");       \r\n\r\n    }\r\n\r\n    typeChange= () => {\r\n        //console.log(document.getElementById(\"registerSwitch\").checked);\r\n        var s = document.getElementById(\"registerSwitch\").checked;\r\n        this.setState({type:(s)?(\"self-service\"):(\"normal\")})\r\n    }\r\n\r\n    register = (formVars) => {\r\n        const { history } = this.props;\r\n        //alert(document.getElementById(\"registerSwitch\").value);\r\n        \r\n        var values = [];\r\n        values[\"name\"]= formVars[0].id.value;\r\n        values[\"address\"]= formVars[1].id.value;\r\n        values[\"phoneNumber\"]= formVars[2].id.value;\r\n        values[\"email\"]= formVars[3].id.value;\r\n        values[\"username\"]= formVars[4].id.value;\r\n        values[\"password\"]= formVars[5].id.value;\r\n\r\n        registration(values).then((response)=>{\r\n\r\n            if(response.status == 200){\r\n                login(values[\"username\"],values[\"password\"]).then((response)=>{\r\n                    this.setState({loading : true});\r\n                    if(response){            \r\n                        this.props.dispatch(setToken(response.token));\r\n                        getUserInfo(this.props.token).then((result)=>{\r\n                            this.props.dispatch(setUser(result));\r\n                            this.setState({loading:true});\r\n                            history.push(\"/mainPage\");\r\n                        });\r\n                    } else{\r\n                        \r\n                    }\r\n                               \r\n                }).catch((error)=>{\r\n                    console.log(\"error is : \" + error );\r\n                });\r\n            }else{\r\n                //todo\r\n            }      \r\n        });\r\n        \r\n    }\r\n\r\n    render(){\r\n        const {classes } = this.props;\r\n\r\n        const {loading} = this.state;\r\n\r\n          var formVariables = [\r\n            {name:\"name\", id:null,label : \"Name\",type:\"text\",icon:<Note  style={{fontSize:\"50px\",color:\"black\"}}/>},\r\n            {name : \"address\",id:null,label : \"Address\",type:\"text\",icon:<LocationOn style={{fontSize:\"50px\",color:\"black\"}}/>},\r\n            {name : \"phoneNumber\",id:null,label : \"Phone Number\",type:\"tel\",icon:<Phone style={{fontSize:\"50px\",color:\"black\"}}/>},\r\n            {name : \"email\",id:null,label : \"Email\",type:\"email\",icon:<Mail style={{fontSize:\"50px\",color:\"black\"}}/>},\r\n            {name : \"username\",id:null,label : \"Username\",type:\"text\",icon:<AccountBox style={{fontSize:\"50px\",color:\"black\"}}/>},\r\n            {name : \"password\",id:null,label : \"Password\",type:\"password\",icon:<VpnKey style={{fontSize:\"50px\",color:\"black\"}}/>}];\r\n         \r\n        \r\n        return(\r\n        <div className=\"App\">\r\n          <header className=\"App-Header\">\r\n              <h1 className=\"title\">Qrder</h1>\r\n        </header>\r\n        <body className=\"App-body\">\r\n        <div className=\"RegisterMainPanel\"> \r\n          <div className=\"RegisterPanel\">\r\n            {loading ? (<>\r\n            signing up...</>\r\n                ):(\r\n                     <>\r\n            {formVariables.map((index)=>(\r\n            (index.name == \"password\")?( <>&nbsp;&nbsp;\r\n                <TextField id={index.name} label = {index.label} \r\n                type={index.type}\r\n                inputRef={el =>index.id = el} \r\n                className = {classes.main}\r\n                InputProps={{\r\n                        classes:{\r\n                            input:classes.font\r\n                        }\r\n                    }}\r\n                    InputLabelProps={{\r\n                        classes:{\r\n                            root: classes.font,\r\n                        }\r\n                    }}\r\n                />{index.icon}                          \r\n                <br/>\r\n                <br/>\r\n                </>):( <>\r\n                <TextField id={index.name} label = {index.label}\r\n                multiline rowsmax = {4} \r\n                type={index.type}\r\n                inputRef={el =>index.id = el} \r\n                className = {classes.main}\r\n                InputProps={{\r\n                        classes:{\r\n                            input:classes.font\r\n                        }\r\n                    }}\r\n                    InputLabelProps={{\r\n                        classes:{\r\n                            root: classes.font,\r\n                        }\r\n                    }}\r\n                />   {index.icon}                            \r\n                <br/>\r\n                <br/>\r\n                </>)\r\n                \r\n               \r\n            ))}\r\n                <span style={{float:\"left\",color:\"#000000\"}}>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<Switch\r\n                        color=\"default\"\r\n                        id = \"registerSwitch\"\r\n\r\n                        onChange={this.typeChange.bind(this)}\r\n                        />{this.state.type}\r\n                </span>\r\n                \r\n                <br/>\r\n                <br/>\r\n                 <span className=\"ButtonLayout\">\r\n                 <Button\r\n                    classes={{\r\n                        root: classes.buttonRoot, // class name, e.g. `classes-nesting-root-x`\r\n                        label: classes.buttonLabel, // class name, e.g. `classes-nesting-label-x`\r\n                    }}\r\n                    onClick={this.register.bind(this,formVariables)}\r\n                >Register</Button>\r\n                </span>\r\n                <span className=\"ButtonLayout\">\r\n                <Button\r\n                    classes={{\r\n                        root: classes.buttonRoot, // class name, e.g. `classes-nesting-root-x`\r\n                        label: classes.buttonLabel, // class name, e.g. `classes-nesting-label-x`\r\n                    }}\r\n                    onClick={this.login}\r\n                >Back</Button>\r\n                </span></>\r\n                )}\r\n           \r\n          </div>\r\n          </div>\r\n        </body>\r\n        \r\n      </div>)\r\n        \r\n    }\r\n}\r\n\r\nconst useStyles = {\r\n    main:{\r\n        '& label.Mui-focused': {\r\n            color: '#000000',\r\n          },          \r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#000000',\r\n      },\r\n    },\r\n    font:{\r\n        color : \"#000000\",\r\n        '&:-webkit-autofill': {\r\n            transitionDelay: '9999s',\r\n            transitionProperty: 'background-color, color',\r\n          },\r\n    },\r\n    buttonRoot: {\r\n        background: 'linear-gradient(45deg, #282c34e8 30%, #282c34e8 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: \"#c4a748d0\",\r\n        height: 48,\r\n        padding: '0 30px',\r\n      },\r\n    buttonLabel: {\r\n        textTransform: 'capitalize',\r\n    },\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    token : state.token,\r\n    user : state.user\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,null)(withRouter(withStyles(useStyles)(RegisterPage)));","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\MenuPanel.js",["172","173","174","175","176","177","178","179","180","181","182","183","184","185","186"],"import React from \"react\";\r\nimport { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow,  TextField,  withStyles } from \"@material-ui/core\";\r\nimport { AccountBalanceWallet, CheckBox, Edit, Face, HighlightOff, HourglassFull } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { addSubtopic, removeItem, requestMenu, requestOrders } from \"../../requests/restaurant\";\r\nimport { setDisplayingPanel, setMenu, setOrders, setUser } from \"../../redux/actions\";\r\nimport { setRestaurantMenu } from \"../../redux/reducers\";\r\nimport ItemDetailsPanel from \"./Item/ItemDetailsPanel\";\r\nimport ItemsPanel from \"./Item/ItemsPanel\";\r\n\r\nclass MenuPanel extends React.Component {\r\n  state = {\r\n    info: {\r\n      OrderCount: null,\r\n      orders: [{}],\r\n    },\r\n    page: null,\r\n    rowsPerPage : 10,\r\n  };\r\n\r\n  columns = [\r\n    {\r\n        id: \"name\",\r\n        label: \"Menu\",\r\n        minWidth: 170,\r\n        align: \"center\",\r\n      }\r\n  ];\r\n\r\n /* columns = [\r\n    { id: 'name', label: 'Name', minWidth: 170 },\r\n    { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n    {\r\n      id: 'population',\r\n      label: 'Population',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'size',\r\n      label: 'Size\\u00a0(km\\u00b2)',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'density',\r\n      label: 'Density',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    },\r\n  ];\r\n*/\r\n addType = () => {\r\n  var value = document.getElementById(\"addType\").value;\r\n  addSubtopic(value,this.props.token).then((result)=>{\r\n    requestMenu(this.props.token).then((response) => {\r\n        this.props.dispatch(setMenu(response.data.menu));    \r\n    });\r\n  })\r\n }\r\n  \r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({page:newPage});\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({rowsPerPage:+event.target.value});\r\n    this.setState({page:0});\r\n  };\r\n\r\n  detailsHandler = (item) => {\r\n    console.log(item);\r\n    this.props.dispatch(setDisplayingPanel(<ItemDetailsPanel item = {item}/>));\r\n  }\r\n\r\n  removeItem = (item) =>{\r\n    /*console.log(\"remove\");\r\n    console.log(item);\r\n    console.log(this.props.token);*/\r\n    removeItem(item.uuid,this.props.token).then((response)=>{\r\n      console.log(response);\r\n      requestMenu(this.props.token).then((response) => {\r\n        this.props.dispatch(setMenu(response.data.menu));    \r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    //console.log(\"orderpanel : \" + this.props.token);\r\n\r\n    \r\n        \r\n      requestMenu(this.props.token).then((response) => {\r\n          this.props.dispatch(setMenu(response.data.menu));    \r\n      });\r\n      \r\n    \r\n    /*this.setState({info : getOrders()});\r\n    setInterval(function(){      \r\n      this.setState({info : getOrders()});\r\n    }.bind(this),10);*/\r\n  }\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    const {rowsPerPage,page} = this.state;\r\n    const columns = this.columns;\r\n    const rows = this.props.menu;\r\n    const handleChangePage = this.handleChangePage.bind(this);\r\n    const handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\r\n\r\n    return (\r\n      <div >\r\n        <TableContainer  className=\"Test2\">\r\n        <TextField id=\"addType\" label = \"Add Type\"                                     \r\n                                    type=\"text\"                                     \r\n                                    className = {classes.main}\r\n                                    InputProps={{\r\n                                            classes:{\r\n                                                input:classes.font\r\n                                            }\r\n                                        }}\r\n                                        InputLabelProps={{\r\n                                            classes:{\r\n                                                root: classes.font,\r\n                                            }\r\n                                        }}\r\n                                    />   \r\n                                    &nbsp;                                    \r\n                                    &nbsp;                                    \r\n                                    &nbsp;\r\n                                    <Button\r\n                                    classes={{\r\n                                        root: classes.buttonRoot, // class name, e.g. `classes-nesting-root-x`\r\n                                        label: classes.buttonLabel, // class name, e.g. `classes-nesting-label-x`\r\n                                    }}\r\n                                    \r\n                                    onClick={this.addType.bind(this)}\r\n                                >Add</Button>\r\n        <hr/>\r\n        <Table stickyHeader aria-label=\"sticky table\" >\r\n          <TableHead >\r\n            <TableRow >\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                  classes={{\r\n                    root:\"Chart-header-specs\"\r\n                  }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody  >\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (<>\r\n              <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} >\r\n                   \r\n                      <TableCell align=\"center\" classes={{\r\n                          root:\"Chart-header-specs3\"\r\n                        }} >\r\n                          {row.name}\r\n                      </TableCell>\r\n                       \r\n                </TableRow>\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (<>                     \r\n                      <ItemsPanel items = {row.Items} type={row}/>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </>);\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst useStyles = {\r\n  main:{\r\n      '& label.Mui-focused': {\r\n          color: '#c4a748d0',\r\n        },          \r\n  '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#c4a748d0',\r\n    },\r\n  },\r\n  font:{\r\n      color : \"#c4a748d0\",\r\n      '&:-webkit-autofill': {\r\n          transitionDelay: '9999s',\r\n          transitionProperty: 'background-color, color',\r\n        },\r\n  },\r\n  buttonRoot: {\r\n      background: 'linear-gradient(45deg, #c4a748d0 30%, #c4a748d0 90%)',\r\n      borderRadius: 3,\r\n      border: 0,\r\n      color: 'black',\r\n      height: 48,\r\n      padding: '0 30px',\r\n    },\r\n  buttonLabel: {\r\n      textTransform: 'capitalize',\r\n  },\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  menu : state.menu,\r\n  order : state.test,\r\n  display : state.display\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(withStyles(useStyles)(MenuPanel));\r\n\r\n","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\Item\\ItemPanel.js",["187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209"],"import React from \"react\";\r\nimport { Button, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TextField, withStyles } from \"@material-ui/core\";\r\nimport { AccountBalanceWallet, AddCircle, Bookmark, CheckBox,  CheckSharp,  Face, Fastfood, HighlightOff, HourglassFull, LocalOffer, Note } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItem, requestMenu, requestOrders, UpdateItem } from \"../../../requests/restaurant\";\r\nimport MenuPanel from \"../MenuPanel\";\r\nimport { setDisplayingPanel } from \"../../../redux/actions\";\r\n\r\nclass ItemPanel extends React.Component {\r\n\r\n    state = {\r\n        loading : false,\r\n        item : {},\r\n        formVariables : [],\r\n        img : null,\r\n        preview:{\r\n            subtopicName:0,\r\n            name : 0,\r\n            price : 0,\r\n            desc : 0,\r\n            metadata : [],\r\n        }\r\n    };\r\n\r\n    add = (formVars)=> {\r\n            var values = [];\r\n            formVars[1].reference = document.getElementById(\"types\");\r\n            values[\"img\"]= formVars[0].reference.value;\r\n            values[\"subtopicUuid\"] = formVars[1].reference.value;\r\n            values[\"name\"]= formVars[2].reference.value;\r\n            values[\"price\"]= formVars[3].reference.value;\r\n            values[\"desc\"]= formVars[4].reference.value;\r\n            values[\"metadata\"]= formVars[5].reference.value;            \r\n            //console.log(values[\"type\"].reference);\r\n            console.log(values);\r\n            if(this.props.item){\r\n                //console.log(this.state.item);\r\n                UpdateItem(values,this.props.token,this.state.item.uuid).then((response)=>{\r\n                    console.log(response);                    \r\n                    this.props.dispatch(setDisplayingPanel(<MenuPanel/>));\r\n                });\r\n            }else{\r\n                addItem(values,this.props.token).then((response)=>{\r\n                    console.log(response);\r\n                    this.props.dispatch(setDisplayingPanel(<MenuPanel/>));\r\n                });\r\n\r\n            }\r\n            /**/\r\n\r\n    }\r\n    componentDidMount() {\r\n        var formVariables = [\r\n            {id:\"img\",label : \"Image(URL)\",type:\"text\",reference : null,default: null},\r\n            {id:\"type\",label : \"type\",type:\"select\",reference : null,default: null},\r\n            {id:\"name\",label : \"Name\",type:\"text\",reference : null,default: null},\r\n            {id:\"price\",label : \"Price\",type:\"text\",reference : null,default: null},\r\n            {id:\"desc\",label : \"Description\",type:\"text\",reference : null,default: null},\r\n            {id:\"metadata\",label : \"Optionals\",type:\"text\",reference : null,default: null}\r\n        ];\r\n        \r\n        if(this.props.item){\r\n            console.log(this.props.item);\r\n            this.setState({item : this.props.item})\r\n            formVariables.map((index)=>{index.default = this.props.item[index.id]});\r\n            this.setState({img:this.props.item.img})\r\n        }\r\n        this.setState({formVariables});\r\n    }\r\n\r\n    imageRender = () =>{\r\n        console.log(this.state.formVariables[0].reference.value);\r\n        this.setState({img:this.state.formVariables[0].reference.value});\r\n    }\r\n\r\n    typeRender = () =>{\r\n        \r\n        console.log(document.getElementById(\"types\").value);\r\n        var typeName = document.getElementById(document.getElementById(\"types\").value).innerHTML;\r\n        var temp = this.state;\r\n        temp.preview.subtopicName = typeName;\r\n        this.setState(temp); \r\n    }\r\n\r\n    addMetadata = () =>{\r\n        var temp = this.state;\r\n        console.log(temp);\r\n        temp.preview.metadata.push(document.getElementById(\"metadata\").value);\r\n        document.getElementById(\"metadata\").value = \"\";\r\n        this.setState(temp);\r\n    }\r\n\r\n    changeHandler = (contentId) =>{\r\n        \r\n        var temp = this.state;\r\n        var value = document.getElementById(contentId).value;\r\n        switch (contentId){\r\n            case \"name\":\r\n                temp.preview.name = value;\r\n                break;\r\n            case \"price\":\r\n                temp.preview.price = value;\r\n                break;\r\n            case \"desc\":\r\n                temp.preview.desc = value;\r\n                break;\r\n        }\r\n        this.setState(temp);\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        console.log(this.state.formVariables);\r\n\r\n        var formVariables = this.state.formVariables;\r\n\r\n            formVariables.map((index)=>{index.default = this.state.item[index.id]});\r\n            var test = \"test\";\r\n        return (\r\n            <>\r\n            <Grid container spacing={1}>\r\n                    <Grid item xs={6} className=\"GridElement\">\r\n                            <Grid container spacing={1}>\r\n                                \r\n                                <Grid item xs={12} className=\"GridElement\">\r\n                                    <div className=\"BigImage\">\r\n                                        <img  src={this.state.img} width =\"60%\" height =\"100%\"/>                                        \r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} className=\"GridElement\">\r\n                                    <div className=\"BigTag4\"> \r\n                                        <div style={{textAlign:\"left\",minWidth:\"100%\",fontSize:\"15px\"}}>\r\n                                        <Fastfood/>{this.state.preview.name}\r\n                                    \r\n                                            <span style={{float:\"right\"}}>\r\n                                                &nbsp;&nbsp;&nbsp;&nbsp;{this.state.preview.subtopicName}<Bookmark/>\r\n                                            </span> \r\n                                            <hr/>\r\n                                            <Note/>{this.state.preview.desc}\r\n                                            <br/>\r\n                                            <br/> \r\n                                            Optionals:\r\n                                            <br/>              \r\n                                        {this.state.preview.metadata.map((ingredient)=>(\r\n                                            <>\r\n                                            <CheckSharp/>{ingredient} <HighlightOff style={{fontSize:\"12px\"}}/>\r\n                                            <br/>\r\n                                            </>\r\n                                        ))}  \r\n                                        <hr/>  \r\n                                        <div style={{textAlign:\"center\"}}>\r\n                                        <LocalOffer/>Price : {this.state.preview.price} TL\r\n                                        </div>                             \r\n                                        </div>                                \r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} className=\"GridElement\">                                   \r\n                                    <span className=\"ButtonLayout\">\r\n                                    <Button\r\n                                        classes={{\r\n                                            root: classes.buttonRoot, // class name, e.g. `classes-nesting-root-x`\r\n                                            label: classes.buttonLabel, // class name, e.g. `classes-nesting-label-x`\r\n                                        }}\r\n                                        onClick={this.add.bind(this,formVariables)}\r\n                                    >{(this.props.item) ? (<>Update</>):(<>Add</>)}</Button>\r\n                                    </span>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                    </Grid>\r\n                    <Grid item xs={6} className=\"GridElement\">\r\n                            <div style={{textAlign:\"left\"}}>\r\n                            {formVariables.map((index)=>(\r\n                                (index.id == \"type\")?(<>\r\n                                <div className=\"SelectLabel\">Type</div> \r\n                                <select name=\"type\" id=\"types\" className=\"Select\" onChange={this.typeRender}>\r\n                                    {this.props.menu.map((type)=>(\r\n                                <option id = {type.uuid} value={type.uuid} className=\"Option\">{type.name}</option>))}\r\n                              </select><br/>\r\n                                <br/>\r\n                                </>):(<>\r\n                                    <TextField id={index.id} label = {index.label} \r\n                                    \r\n                                    type={index.type}\r\n                                    inputRef={el =>index.reference = el} \r\n                                    className = {classes.main}\r\n                                    defaultValue = {index.default}\r\n                                    onChange = {(index.id == \"img\") ? (this.imageRender):((index.id == \"metadata\")?(null):(this.changeHandler.bind(this,index.id)))}\r\n                                    InputProps={{\r\n                                            classes:{\r\n                                                input:classes.font\r\n                                            }\r\n                                        }}\r\n                                        InputLabelProps={{\r\n                                            classes:{\r\n                                                root: classes.font,\r\n                                            }\r\n                                        }}\r\n                                    />   {(index.id == \"metadata\")?(<AddCircle style={{paddingTop:\"20px\"}} onClick={this.addMetadata} />):(null)}                          \r\n                                    <br/>\r\n                                    <br/>\r\n                                    </>)\r\n                                \r\n                            ))}\r\n                            </div>                      \r\n                    </Grid>\r\n                </Grid>\r\n           \r\n                </>\r\n        );\r\n    }\r\n}\r\n\r\nconst useStyles = {\r\n    main:{\r\n        '& label.Mui-focused': {\r\n            color: '#c4a748d0',\r\n          },          \r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#c4a748d0',\r\n      },\r\n    },\r\n    font:{\r\n        color : \"#c4a748d0\",\r\n        '&:-webkit-autofill': {\r\n            transitionDelay: '9999s',\r\n            transitionProperty: 'background-color, color',\r\n          },\r\n    },\r\n    buttonRoot: {\r\n        background: 'linear-gradient(45deg, #c4a748d0 30%, #c4a748d0 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'black',\r\n        height: 48,\r\n        padding: '0 30px',\r\n      },\r\n    buttonLabel: {\r\n        textTransform: 'capitalize',\r\n    },\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  menu : state.menu,\r\n  order : state.test,\r\n  display : state.display\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(withStyles(useStyles)(ItemPanel));\r\n\r\n","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\Item\\ItemDetailsPanel.js",["210"],"import React from \"react\";\r\nimport {  Button, Grid, withStyles } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Bookmark, CheckSharp, Edit, Fastfood, LocalOffer, Note } from \"@material-ui/icons\";\r\nimport ItemPanel from \"./ItemPanel\";\r\nimport { setDisplayingPanel } from \"../../../redux/actions\";\r\n\r\nclass ItemDetailsPanel extends React.Component {\r\n\r\n    state = {\r\n        item : {},\r\n        ingredients : [],\r\n        loading : false\r\n    };\r\n    componentDidMount() {\r\n        console.log(this.props.item);\r\n        this.setState({item : this.props.item});  \r\n        if(this.props.item.metadata){            \r\n            var temp = this.props.item.metadata.split(\";\");\r\n        }      \r\n        this.setState({ingredients : temp});\r\n        \r\n    }\r\n    editItem = () =>{\r\n        this.props.dispatch(setDisplayingPanel(<ItemPanel item = {this.state.item}/>));\r\n    }\r\n    /*<Button\r\n        classes={{\r\n            root: classes.buttonRoot, // class name, e.g. `classes-nesting-root-x`\r\n            label: classes.buttonLabel, // class name, e.g. `classes-nesting-label-x`\r\n        }}\r\n    >Edit</Button>*/\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        \r\n        return (\r\n            <>\r\n                 <Grid container spacing={1}>\r\n                    <Grid item xs={6} className=\"GridElement\">\r\n                            <Grid container spacing={1}>\r\n                                \r\n                                <Grid item xs={12} className=\"GridElement\">\r\n                                    <div className=\"BigImage\">\r\n                                        <img alt={this.state.item.img} src={this.state.item.img} width =\"60%\" height =\"100%\"/>\r\n                                        \r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} className=\"GridElement\">\r\n                                    <Button\r\n                                        classes={{\r\n                                            root: classes.buttonRoot, // class name, e.g. `classes-nesting-root-x`\r\n                                            label: classes.buttonLabel, // class name, e.g. `classes-nesting-label-x`\r\n                                        }}\r\n                                        onClick = {this.editItem}\r\n                                    ><Edit/>  Edit</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                    </Grid>\r\n                    <Grid item xs={6} className=\"GridElement\">\r\n                        <div className=\"BigTag\">\r\n                            <div style={{textAlign:\"left\"}}>\r\n                                <Fastfood/>{this.state.item.name}\r\n                                \r\n                                <span style={{float:\"right\"}}>\r\n                                    &nbsp;&nbsp;&nbsp;&nbsp;{this.props.type.name}<Bookmark/>\r\n                                    </span> \r\n                                <hr/>\r\n                                <Note/>{this.state.item.desc}\r\n                                <br/>\r\n                                <br/> \r\n                                Ingredients:\r\n                                <br/>                           \r\n                                {(this.props.item.metadata)?(this.state.ingredients.slice().map((ingredient)=>(<><CheckSharp/>{ingredient}<br/></>))):(<></>)}\r\n                                <hr/>\r\n                                <div style={{textAlign:\"center\"}}>\r\n                                <LocalOffer/>{this.state.item.price}TL\r\n                                </div>\r\n                            </div>\r\n                        </div>                            \r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                </>\r\n        );\r\n    }\r\n}\r\n\r\nconst useStyles = {\r\n    \r\n    buttonRoot: {\r\n        background: 'linear-gradient(45deg, #c4a748d0 30%, #c4a748d0 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'black',\r\n        height: 48,\r\n        width: \"200px\",\r\n        height : \"75px\",\r\n        padding: '0 30px',\r\n      },\r\n    buttonLabel: {\r\n        \r\n        fontSize: \"30px\",\r\n        textTransform: 'capitalize',\r\n    },\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  menu : state.menu,\r\n  order : state.test,\r\n  display : state.display\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(withStyles(useStyles)(ItemDetailsPanel));\r\n\r\n","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\order\\OrderCreatePanel.js",["211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235"],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\Item\\ItemsPanel.js",["236","237","238","239","240","241","242","243","244","245","246","247","248"],"import React from \"react\";\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from \"@material-ui/core\";\r\nimport { AccountBalanceWallet, CheckBox, Edit, Face, HighlightOff, HourglassFull } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDisplayingPanel, setMenu } from \"../../../redux/actions\";\r\nimport ItemDetailsPanel from \"./ItemDetailsPanel\";\r\nimport { removeItem, requestMenu } from \"../../../requests/restaurant\";\r\n\r\nclass ItemsPanel extends React.Component {\r\n  state = {\r\n    info: {\r\n      OrderCount: null,\r\n      orders: [{}],\r\n    },\r\n    page: null,\r\n    rowsPerPage : 10,\r\n  };\r\n\r\n  columns = [\r\n    \r\n    {\r\n      id: \"image\",\r\n      label: \"Image\",\r\n      minWidth: 170,\r\n      align: \"left\"\r\n    },\r\n    {\r\n        id: \"name\",\r\n        label: \"Name\",\r\n        minWidth: 170,\r\n        align: \"left\",\r\n      },\r\n    {\r\n      id: \"price\",\r\n      label: \"Price\",\r\n      minWidth: 170,\r\n      align: \"center\",\r\n    }\r\n    ,\r\n    {\r\n      id: \"buttons\",\r\n      label: \"\",\r\n      minWidth: 30,\r\n      align: \"center\",\r\n    }\r\n  ];\r\n\r\n /* columns = [\r\n    { id: 'name', label: 'Name', minWidth: 170 },\r\n    { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n    {\r\n      id: 'population',\r\n      label: 'Population',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'size',\r\n      label: 'Size\\u00a0(km\\u00b2)',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'density',\r\n      label: 'Density',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    },\r\n  ];\r\n*/\r\n \r\n  \r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({page:newPage});\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({rowsPerPage:+event.target.value});\r\n    this.setState({page:0});\r\n  };\r\n\r\n  detailsHandler = (item) => {\r\n    this.props.dispatch(setDisplayingPanel(<ItemDetailsPanel item = {item} type = {this.props.type}/>));\r\n  }\r\n\r\n  removeItem = (item) =>{\r\n    /*console.log(\"remove\");\r\n    console.log(item);\r\n    console.log(this.props.token);*/\r\n    removeItem(item.uuid,this.props.token).then((response)=>{\r\n      console.log(response);\r\n      requestMenu(this.props.token).then((response) => {\r\n        this.props.dispatch(setMenu(response.data.menu));    \r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    const {classes,rowsPerPage,page} = this.state;\r\n    const columns = this.columns;\r\n    const rows = this.props.items;\r\n    const handleChangePage = this.handleChangePage.bind(this);\r\n    const handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\r\n\r\n    return (\r\n      <div >\r\n        <TableContainer  className=\"Test2\">\r\n        <Table stickyHeader aria-label=\"sticky table\" >\r\n          <TableHead >\r\n            <TableRow >\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                  classes={{\r\n                    root:\"Chart-header-specs\"\r\n                  }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody  >\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align} onClick={(column.id == \"buttons\")?(null):(this.detailsHandler.bind(this,row))} style={{cursor:\"pointer\"}}>\r\n                        {(column.id == \"image\")?(<img alt={row.img} src={row.img} width =\"50\"/>):(\r\n                        (column.id == \"buttons\")?(<HighlightOff style={{color:\"#ffda61\"}} onClick={this.removeItem.bind(this,row)}></HighlightOff>):(<div className=\"OrderCell\">                                                    \r\n                          {column.format && typeof value === 'number' ? column.format(value) : (value)}\r\n                        </div>))}\r\n                        \r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  menu : state.menu,\r\n  order : state.test,\r\n  display : state.display\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(ItemsPanel);\r\n\r\n","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\Item\\MiniItemPanel.js",["249","250","251","252","253","254","255","256","257","258","259","260","261","262"],"import React from \"react\";\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from \"@material-ui/core\";\r\nimport { AccountBalanceWallet, AddCircle, CheckBox, Edit, Face, HighlightOff, HourglassFull } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDisplayingPanel, setMenu } from \"../../../redux/actions\";\r\nimport ItemDetailsPanel from \"./ItemDetailsPanel\";\r\nimport { removeItem, requestMenu } from \"../../../requests/restaurant\";\r\n\r\nclass MiniItemPanel extends React.Component {\r\n  state = {\r\n    info: {\r\n      OrderCount: null,\r\n      orders: [{}],\r\n    },\r\n    page: null,\r\n    rowsPerPage : 10,\r\n  };\r\n\r\n  columns = [\r\n    {\r\n        id: \"name\",\r\n        label: \"Name\",\r\n        minWidth: 170,\r\n        align: \"left\",\r\n      },\r\n    {\r\n      id: \"price\",\r\n      label: \"Price\",\r\n      minWidth: 10,\r\n      align: \"center\",\r\n    }\r\n    ,\r\n    {\r\n      id: \"buttons\",\r\n      label: \"\",\r\n      minWidth: 10,\r\n      align: \"center\",\r\n    }\r\n  ];\r\n\r\n /* columns = [\r\n    { id: 'name', label: 'Name', minWidth: 170 },\r\n    { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n    {\r\n      id: 'population',\r\n      label: 'Population',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'size',\r\n      label: 'Size\\u00a0(km\\u00b2)',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'density',\r\n      label: 'Density',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    },\r\n  ];\r\n*/\r\n \r\n  \r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({page:newPage});\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({rowsPerPage:+event.target.value});\r\n    this.setState({page:0});\r\n  };\r\n\r\n  detailsHandler = (item) => {\r\n    console.log(item);\r\n    this.props.dispatch(setDisplayingPanel(<ItemDetailsPanel item = {item}/>));\r\n  }\r\n\r\n  removeItem = (item) =>{\r\n    /*console.log(\"remove\");\r\n    console.log(item);\r\n    console.log(this.props.token);*/\r\n    removeItem(item.uuid,this.props.token).then((response)=>{\r\n      console.log(response);\r\n      requestMenu(this.props.token).then((response) => {\r\n        this.props.dispatch(setMenu(response.data.menu));    \r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    const {classes,rowsPerPage,page} = this.state;\r\n    const columns = this.columns;\r\n    const rows = this.props.items;\r\n    const handleChangePage = this.handleChangePage.bind(this);\r\n    const handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\r\n\r\n    return (\r\n      <div >\r\n        <TableContainer  >\r\n        <Table stickyHeader aria-label=\"sticky table\" >\r\n          <TableHead >\r\n            <TableRow >\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                  classes={{\r\n                    root:\"Chart-header-specs\"\r\n                  }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody  >\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align} onClick={(column.id == \"buttons\")?(null):(this.detailsHandler.bind(this,row))} style={{cursor:\"pointer\"}}>\r\n                        {(column.id == \"image\")?(<img alt={row.img} src={row.img} width =\"50\"/>):(\r\n                        (column.id == \"buttons\")?(<AddCircle style={{color:\"#ffda61\"}} onClick={this.props.addHandler.bind(this,row)}></AddCircle>):(<div className=\"OrderCell\">                                                    \r\n                          {column.format && typeof value === 'number' ? column.format(value) : (value)}\r\n                        </div>))}\r\n                        \r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  menu : state.menu,\r\n  order : state.test,\r\n  display : state.display\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(MiniItemPanel);\r\n\r\n","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\tables\\TablePanel.js",[],"C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\tables\\Table.js",["263","264","265"],"import { AccountBalanceWallet, CheckBox, Face, HourglassFull } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDisplayingPanel } from \"../../../redux/actions\";\r\nimport TableDetails from \"./TableDetails\";\r\nconst moment = require('moment');\r\n\r\nclass Table extends React.Component {\r\n\r\n    state = {\r\n          orderCount:null,\r\n          orders:[{}],\r\n          earliestOrderTime : null,\r\n          notifications : []\r\n       };\r\n\r\n       tableDetails(table){\r\n       //alert(\"hi\");\r\n       \r\n        this.props.dispatch(setDisplayingPanel(<TableDetails table={this.props.tableInfo}/>));\r\n        \r\n\r\n       }\r\n\r\n       componentDidMount(){\r\n           if(this.props.tableInfo.RecentOrders.length != 0){\r\n                var temp = {orderCount : this.props.tableInfo.RecentOrders.length,\r\n                            orders : this.props.tableInfo.RecentOrders,\r\n                            earliestOrderTime : -1,\r\n                            notifications : []};\r\n                temp.notifications.push({name:\"waiting\",icon:<HourglassFull className=\"Waiting\"/>});\r\n                temp.notifications.push({name:\"waiter\",icon:<Face className=\"Waiter\"/>});\r\n                temp.notifications.push({name:\"served\",icon:<CheckBox className=\"Done\"/>});\r\n                temp.notifications.push({name:\"payment\",icon:<AccountBalanceWallet className=\"Payment\"/>});\r\n                temp.orders.map((order)=>{\r\n                    console.log(\"here\");\r\n                    \r\n                    if(moment().diff(moment(order.createdAt),\"minutes\") > temp.earliestOrderTime){\r\n                        temp.earliestOrderTime=moment().diff(moment(order.createdAt),\"minutes\");\r\n                    }\r\n                    console.log(order.createdAt);\r\n                });\r\n                this.setState(temp);\r\n                \r\n                setInterval(function(){\r\n                    this.setState({earliestOrderTime : this.state.earliestOrderTime+1});\r\n                }.bind(this),60000);\r\n            }\r\n            \r\n       }\r\n\r\n  render() {\r\n    return (\r\n      \r\n        <div className=\"Table\"  onClick= {this.tableDetails.bind(this,this.props.tableInfo)}style={{cursor:\"pointer\" , background: (this.state.earliestOrderTime)?(getViewValues(this.state.earliestOrderTime)):(\"#c4a748\") }}>\r\n            <span className=\"TableContent\">\r\n            {this.props.tableInfo.name}\r\n            \r\n            </span>\r\n            {this.state.notifications.map((notification)=>{return (notification.icon)})\r\n            }\r\n        </div>   \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    token : state.token,\r\n    user : state.user,\r\n    menu : state.menu,\r\n    order : state.test,\r\n    display : state.display\r\n  })\r\n\r\nexport default connect(mapStateToProps,null)(Table);\r\n\r\n\r\nfunction componentToHex(c) {\r\n    var hex = c.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n  }\r\n  \r\n  function rgbToHexFirst(r, g, b) {\r\n    return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n  }\r\n  \r\n  function getViewValues(time){\r\n      /*var firstColor = \"#c4a748e8\";\r\n      var secondColor =  \"#33ccffe8\";\r\n      secondColor = \"#ffffffe8\";\r\n      var thirdColor =  \"#282c34e8\";\r\n      thirdColor = rgbToHexFirst(255,0,0)+\"40\";\r\n      var type = \"radial-gradient(\";*/\r\n  \r\n      \r\n      //Base\r\n      time = (time/45)*255;\r\n      const alpha = \"d0\";\r\n      const firstColor = rgbToHexFirst(0,255,0)+alpha;\r\n      const secondColor =  rgbToHexFirst(255,255,0)+alpha;\r\n      const thirdColor =  rgbToHexFirst(255,0,0)+alpha;\r\n      const type = \"linear-gradient(150deg,\";\r\n      if(time==null){\r\n        return \"#9c9c9c\";\r\n      }    \r\n      if(time<=63){\r\n          return type +  firstColor + \" \"+ (100-(((time)*100)/63)) +\"%,\" + secondColor + \" 100%)\";\r\n      }else if(time<127){\r\n          return type +  firstColor + \" 0%,\" + secondColor + \" \"+(100-(((time-63)*100)/63))+\"%)\";\r\n      }else if( time < 190){\r\n          return type +  secondColor + \" \"+ (100-(((time-127)*100)/63)) +\"%,\" + thirdColor + \" 100%)\";\r\n      }else{\r\n          return type +  secondColor + \" 0%,\" + thirdColor + \" \"+(100-(((time-190)*100)/63))+\"%)\";\r\n      }\r\n  }","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\tables\\TableDetails.js",["266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295"],"import React from \"react\";\r\nimport { Button, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, withStyles } from \"@material-ui/core\";\r\nimport { AccountBalanceWallet, AddCircle, CheckBox, Edit, Face, HourglassFull } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDisplayingPanel, setMenu } from \"../../../redux/actions\";\r\nimport ItemDetailsPanel from \"../Item/ItemDetailsPanel\";\r\nimport { addOrder, requestMenu } from \"../../../requests/restaurant\";\r\nimport MiniItemPanel from \"../Item/MiniItemPanel\";\r\nimport MiniOrderPanel from \"../order/MiniOrderPanel\";\r\nimport MiniServicePanel from \"./MiniServicePanel\";\r\n\r\nclass TableDetails extends React.Component {\r\n  state = {\r\n      table:{},\r\n    order : {\r\n        items : [],\r\n        totalPrice : 0,\r\n    },\r\n    page: null,\r\n    rowsPerPage : 10,\r\n    columns : []\r\n  };\r\n\r\n  columns = [\r\n    \r\n    {\r\n        id: \"name\",\r\n        label: \"Menu\",\r\n        minWidth: 200,\r\n        align: \"Center\",\r\n      }\r\n  ];\r\n \r\n  \r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({page:newPage});\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({rowsPerPage:+event.target.value});\r\n    this.setState({page:0});\r\n  };\r\n\r\n /* addItemToOrderHandler = (item) => {\r\n    var items = this.state.order.items;\r\n    items.push(item);   \r\n    var order = {items : items,\r\n                totalPrice : this.state.order.totalPrice + item.price};\r\n    this.setState({order : order});\r\n  }*/\r\n\r\n  addItemToOrderHandler = (item) => {\r\n    var items = this.state.order.items;\r\n    if(items.find(element => element.uuid == item.uuid)){\r\n      items.find(element => element.uuid == item.uuid).quantity++;      \r\n      items.find(element => element.uuid == item.uuid).price +=item.price;\r\n      if(items.find(element => element.uuid == item.uuid).quantity < 3){\r\n        items.find(element => element.uuid == item.uuid).name +=\"x2\";\r\n      }else{                \r\n        var tempString = items.find(element => element.uuid == item.uuid).name.substr(0,items.find(element => element.uuid == item.uuid).name.length-1);\r\n        items.find(element => element.uuid == item.uuid).name= tempString;\r\n        items.find(element => element.uuid == item.uuid).name += items.find(element => element.uuid == item.uuid).quantity;\r\n      }\r\n    }else{      \r\n      var tempItem = {name:item.name,price : item.price,uuid : item.uuid,metadata:item.metadata,quantity:1};\r\n      items.push(tempItem);  \r\n    } \r\n    var order = {items : items,\r\n                totalPrice : this.state.order.totalPrice + item.price};\r\n    this.setState({order : order});\r\n  }\r\n\r\n  test = () =>{\r\n    /*console.log(this.state.order);\r\n    console.log(this.props.user.uuid);*/\r\n    var requestOrder = {\r\n      restaurantUuid : this.props.user.uuid,\r\n      userUuid : null,\r\n      items : []\r\n    }\r\n    this.state.order.items.map((item)=>{\r\n      requestOrder.items.push({uuid:item.uuid,metadata:item.metadata,quantity:item.quantity});\r\n    });\r\n    addOrder(this.props.token,requestOrder);\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    //console.log(\"orderpanel : \" + this.props.token);\r\n\r\n    console.log(\"here\");\r\n        console.log(this.props.table);\r\n        this.setState({table:this.props.table});\r\n      \r\n    this.setState({columns:this.columns});\r\n    \r\n    /*this.setState({info : getOrders()});\r\n    setInterval(function(){      \r\n      this.setState({info : getOrders()});\r\n    }.bind(this),10);*/\r\n  }\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    const {rowsPerPage,page} = this.state;\r\n    const handleChangePage = this.handleChangePage.bind(this);\r\n    const handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\r\n/**/\r\n    return (\r\n      <div >\r\n          \r\n          <Grid container spacing={1}>\r\n              \r\n                    <Grid item xs={12} className=\"GridElement\">\r\n                                    <div className=\"BigTag\" onClick = {this.test}>\r\n                                            {this.props.table.name}\r\n                                        </div>\r\n                                        \r\n                                        \r\n                    </Grid>\r\n                    <Grid item xs={6} className=\"GridElement\" >\r\n                            <Grid container spacing={1}>\r\n                                \r\n                                <Grid item xs={12} className=\"GridElement\"style={{maxHeight:\"300px\"}} >\r\n                                    <div className=\"BigMenu\">\r\n                                      <br/>\r\n                                    <Button\r\n                                        classes={{\r\n                                            root: classes.buttonRoot, // class name, e.g. `classes-nesting-root-x`\r\n                                            label: classes.buttonLabel, // class name, e.g. `classes-nesting-label-x`\r\n                                        }}\r\n                                        \r\n                                          >Add Order</Button>\r\n                                          <br/>\r\n                                          <br/>\r\n                                    <TableContainer  className=\"BigMenu2\">\r\n                                      <Table stickyHeader aria-label=\"sticky table\" >\r\n                                        <TableBody  >\r\n                                              <TableRow hover role=\"checkbox\" tabIndex={-1} key={this.state.table.name} >\r\n                                                {this.state.columns.map((column) => {\r\n                                                  return (<>                     \r\n                                                    <MiniOrderPanel tableOrders = {this.state.table.RecentOrders}/>\r\n                                                    </>\r\n                                                  );\r\n                                                })}\r\n                                              </TableRow>\r\n                                          \r\n                                        </TableBody>\r\n                                      </Table>\r\n                                    </TableContainer>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                    </Grid>\r\n                    <Grid item xs={6} className=\"GridElement\">                        \r\n                        <Grid item xs={12} className=\"GridElement\" style={{maxHeight:\"300px\"}} >\r\n                          <div className=\"BigMenu\">\r\n                        <br/>\r\n                          <Button\r\n                                        classes={{\r\n                                            root: classes.buttonRoot, // class name, e.g. `classes-nesting-root-x`\r\n                                            label: classes.buttonLabel, // class name, e.g. `classes-nesting-label-x`\r\n                                        }}\r\n                                        \r\n                                          >Remove Table</Button>\r\n                                          <br/>\r\n                                          <br/>\r\n                                    <TableContainer  className=\"BigMenu2\">\r\n                                      <Table stickyHeader aria-label=\"sticky table\" >\r\n                                        <TableBody  >\r\n                                              <TableRow hover role=\"checkbox\" tabIndex={-1} key={this.state.table.name} >\r\n                                                {this.state.columns.map((column) => {\r\n                                                  return (<>   \r\n                                                        <MiniServicePanel tableServices = {this.state.table.Services}/>\r\n                                                    </>\r\n                                                  );\r\n                                                })}\r\n                                              </TableRow>\r\n                                            \r\n                                          \r\n                                        </TableBody>\r\n                                      </Table>\r\n                                    </TableContainer>\r\n                                    </div>\r\n                        </Grid>                         \r\n                    </Grid>\r\n                </Grid>\r\n       \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst useStyles = {\r\n  main:{\r\n      '& label.Mui-focused': {\r\n          color: '#c4a748d0',\r\n        },          \r\n  '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#c4a748d0',\r\n    },\r\n  },\r\n  font:{\r\n      color : \"#c4a748d0\",\r\n      '&:-webkit-autofill': {\r\n          transitionDelay: '9999s',\r\n          transitionProperty: 'background-color, color',\r\n        },\r\n  },\r\n  buttonRoot: {\r\n      background: 'linear-gradient(45deg, #c4a748d0 30%, #c4a748d0 90%)',\r\n      borderRadius: 3,\r\n      border: 0,\r\n      color: 'black',\r\n      height: 48,\r\n      padding: '0 30px',\r\n    },\r\n  buttonLabel: {\r\n      textTransform: 'capitalize',\r\n  },\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  menu : state.menu,\r\n  order : state.test,\r\n  display : state.display\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(withStyles(useStyles)(TableDetails));\r\n\r\n","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\order\\MiniOrderPanel.js",["296","297","298","299","300","301","302","303","304","305"],"import React from \"react\";\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from \"@material-ui/core\";\r\nimport { AccountBalanceWallet, CheckBox, DeleteForever, Face, HourglassFull } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { requestOrders } from \"../../../requests/restaurant\";\r\nimport { setOrders } from \"../../../redux/actions\";\r\n\r\nconst moment = require('moment');\r\n\r\nclass MiniOrderPanel extends React.Component {\r\n  state = {\r\n    info: {\r\n      OrderCount: null,\r\n      orders: [{}],\r\n    },\r\n    page: 0,\r\n    rowsPerPage : 10,\r\n  };\r\n\r\n  columns = [\r\n    {\r\n      id: \"orderNo\",\r\n      label: \"Order No\",\r\n      minWidth: 30,\r\n      align: \"left\",\r\n    },\r\n    {\r\n      id: \"time\",\r\n      label: \"Time\",\r\n      minWidth: 30,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      id: \"status\",\r\n      label: \"Status\",\r\n      minWidth: 30,\r\n      align: \"right\",\r\n    },    \r\n    {\r\n        id: \"actions\",\r\n        label: \"Edit\",\r\n        minWidth: 30,\r\n        align: \"right\",\r\n      },\r\n  ];\r\n \r\n  \r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({page:newPage});\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({rowsPerPage:+event.target.value});\r\n    this.setState({page:0});\r\n  };\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    //console.log(\"orderpanel : \" + this.props.token);\r\n    console.log(\"here\");\r\n    console.log(this.props.tableOrders);\r\n    var temp = [];\r\n    this.props.tableOrders.map((order,index)=>{        \r\n        temp.push({orderNo:index+1,\r\n            time : moment().diff(moment(order.createdAt),\"minutes\"),\r\n            status : (order.isPaid)?(\"served\"):(\"waiting\") ,\r\n            actions : <div><CheckBox/><br/><AccountBalanceWallet/><br/><DeleteForever/></div>});\r\n    });\r\n\r\n    this.setState({info:{orderCount:temp.length,\r\n                        orders :temp}});\r\n    /*this.setState({info : getOrders()});\r\n    setInterval(function(){      \r\n      this.setState({info : getOrders()});\r\n    }.bind(this),10);*/\r\n  }\r\n\r\n  render() {\r\n    const {classes,rowsPerPage,page} = this.state;\r\n    const columns = this.columns;\r\n    const rows = this.state.info.orders;\r\n    const handleChangePage = this.handleChangePage.bind(this);\r\n    const handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\r\n    const icons = [];\r\n    icons[\"waiting\"] = <HourglassFull  style={{fontSize:\"40\"}}/>;\r\n    icons[\"served\"] = <CheckBox style={{fontSize:\"40\"}}/>;\r\n    //<CheckBox style={{fontSize:\"40\"}}/>,<AccountBalanceWallet style={{fontSize:\"40\"}}/>,<Face  style={{fontSize:\"40\"}}/>,<HourglassFull  style={{fontSize:\"40\"}}/>\r\n    return (\r\n      <div >\r\n        <TableContainer  className=\"Test2\">\r\n        <Table stickyHeader aria-label=\"sticky table\" >\r\n          <TableHead >\r\n            <TableRow >\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                  classes={{\r\n                    root:\"Chart-header-specs\"\r\n                  }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody  >\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row,index) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align} >\r\n                        <div className=\"OrderCell\">                                                    \r\n                          {column.format && typeof value === 'number' ? column.format(value) : ((column.id == \"status\")?(icons[value]):(value))}\r\n                          \r\n                        </div>\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  orders : state.orders\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(MiniOrderPanel);\r\n\r\n","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\tables\\MiniServicePanel.js",["306","307","308","309","310","311","312","313","314","315"],"import React from \"react\";\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from \"@material-ui/core\";\r\nimport { AccessibilityNew, AccountBalanceWallet, CheckBox, DeleteForever, Face, HourglassFull } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { requestOrders } from \"../../../requests/restaurant\";\r\nimport { setOrders } from \"../../../redux/actions\";\r\n\r\nconst moment = require('moment');\r\n\r\nclass MiniServicePanel extends React.Component {\r\n  state = {\r\n    info: {\r\n      serviceCount: null,\r\n      services: [{}],\r\n    },\r\n    page: 0,\r\n    rowsPerPage : 10,\r\n  };\r\n\r\n  columns = [    \r\n    {\r\n        id: \"service\",\r\n        label: \"Service\",\r\n        minWidth: 30,\r\n        align: \"left\",\r\n      },  \r\n      {\r\n      id: \"time\",\r\n      label: \"Time\",\r\n      minWidth: 30,\r\n      align: \"center\",\r\n    },  \r\n    {\r\n        id: \"actions\",\r\n        label: \"Edit\",\r\n        minWidth: 30,\r\n        align: \"right\",\r\n      },\r\n  ];\r\n \r\n  \r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({page:newPage});\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({rowsPerPage:+event.target.value});\r\n    this.setState({page:0});\r\n  };\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    //console.log(\"orderpanel : \" + this.props.token);\r\n    console.log(\"here\");\r\n    console.log(this.props.tableServices);\r\n    var temp = [];\r\n    var serviceIcon;\r\n    this.props.tableServices.map((service,index)=>{     \r\n        switch(service.name){\r\n            case \"callWaiter\":\r\n                serviceIcon = <Face/>;\r\n                break;\r\n            case \"RequestPayment\":\r\n                serviceIcon = <AccountBalanceWallet/>\r\n                break;\r\n            default:\r\n                serviceIcon = <AccessibilityNew/>\r\n                break;\r\n\r\n        }\r\n        temp.push({orderNo:index+1,\r\n            time : moment().diff(moment(service.createdAt),\"minutes\"),\r\n            service : serviceIcon,\r\n            actions : <CheckBox/>});\r\n    });\r\n\r\n    this.setState({info:{serviceCount:temp.length,\r\n                        services :temp}});\r\n    /*this.setState({info : getOrders()});\r\n    setInterval(function(){      \r\n      this.setState({info : getOrders()});\r\n    }.bind(this),10);*/\r\n  }\r\n\r\n  render() {\r\n    const {classes,rowsPerPage,page} = this.state;\r\n    const columns = this.columns;\r\n    const rows = this.state.info.services;\r\n    const handleChangePage = this.handleChangePage.bind(this);\r\n    const handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\r\n    const icons = [];\r\n    icons[\"waiting\"] = <HourglassFull  style={{fontSize:\"40\"}}/>;\r\n    icons[\"served\"] = <CheckBox style={{fontSize:\"40\"}}/>;\r\n    //<CheckBox style={{fontSize:\"40\"}}/>,<AccountBalanceWallet style={{fontSize:\"40\"}}/>,<Face  style={{fontSize:\"40\"}}/>,<HourglassFull  style={{fontSize:\"40\"}}/>\r\n    return (\r\n      <div >\r\n        <TableContainer  className=\"Test2\">\r\n        <Table stickyHeader aria-label=\"sticky table\" >\r\n          <TableHead >\r\n            <TableRow >\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                  classes={{\r\n                    root:\"Chart-header-specs\"\r\n                  }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody  >\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row,index) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align} >\r\n                        <div className=\"OrderCell\">                                                    \r\n                          {column.format && typeof value === 'number' ? column.format(value) : ((column.id == \"status\")?(icons[value]):(value))}\r\n                          \r\n                        </div>\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  orders : state.orders\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(MiniServicePanel);\r\n\r\n","C:\\Users\\moguz\\OneDrive\\Masaüstü\\cs491repo\\projectDraft\\react\\qrder\\src\\components\\mainPanels\\ProfileEditPanel.js",["316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339"],"import React from \"react\";\r\nimport { Button, Grid, Paper, Switch, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TextField, withStyles } from \"@material-ui/core\";\r\nimport { AccountBox,AccountBalanceWallet, AddCircle, Bookmark, CheckBox,  CheckSharp,  Face, Fastfood, HighlightOff, HourglassFull, LocalOffer, Note, LocationOn, Phone, Mail, VpnKey, AccountCircle } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItem, UpdateItem } from \"../../requests/restaurant\";\r\nimport { setDisplayingPanel } from \"../../redux/actions\";\r\nimport MenuPanel from \"./MenuPanel\";\r\n\r\nclass ProfileEditPanel extends React.Component {\r\n\r\n    state = {\r\n        loading : false,\r\n        item : {},\r\n        formVariables : [],\r\n        img : null,\r\n        preview:{\r\n            name : \"\",\r\n            address : \"\",\r\n            phoneNumber : \"\",\r\n            email : \"\",\r\n            username : \"\",\r\n            password : \"\",\r\n            type : \"\",\r\n        }\r\n    };\r\n\r\n    add = (formVars)=> {\r\n            var values = [];\r\n            formVars[1].reference = document.getElementById(\"types\");\r\n            values[\"img\"]= formVars[0].reference.value;\r\n            values[\"subtopicUuid\"] = formVars[1].reference.value;\r\n            values[\"name\"]= formVars[2].reference.value;\r\n            values[\"price\"]= formVars[3].reference.value;\r\n            values[\"desc\"]= formVars[4].reference.value;\r\n            values[\"metadata\"]= formVars[5].reference.value;            \r\n            //console.log(values[\"type\"].reference);\r\n            console.log(values);\r\n            if(this.props.item){\r\n                //console.log(this.state.item);\r\n                UpdateItem(values,this.props.token,this.state.item.uuid).then((response)=>{\r\n                    console.log(response);                    \r\n                    this.props.dispatch(setDisplayingPanel(<MenuPanel/>));\r\n                });\r\n            }else{\r\n                addItem(values,this.props.token).then((response)=>{\r\n                    console.log(response);\r\n                    this.props.dispatch(setDisplayingPanel(<MenuPanel/>));\r\n                });\r\n\r\n            }\r\n            /**/\r\n\r\n    }\r\n    componentDidMount() {\r\n        var formVariables = [\r\n            {id:\"name\",label : \"RestaurantName\",type:\"text\",reference : null,default: null},\r\n            {id:\"address\",label : \"Address\",type:\"text\",reference : null,default: null},\r\n            {id:\"phone\",label : \"PhoneNumber\",type:\"text\",reference : null,default: null},\r\n            {id:\"email\",label : \"Email\",type:\"text\",reference : null,default: null},\r\n            {id:\"username\",label : \"Username\",type:\"text\",reference : null,default: null},\r\n            {id:\"password\",label : \"Password\",type:\"password\",reference : null,default: null}\r\n        ];\r\n        \r\n        if(this.props.item){\r\n            console.log(this.props.item);\r\n            this.setState({item : this.props.item})\r\n            formVariables.map((index)=>{index.default = this.props.item[index.id]});\r\n            this.setState({img:this.props.item.img})\r\n        }\r\n        this.setState({formVariables});\r\n    }\r\n\r\n    imageRender = () =>{\r\n        console.log(this.state.formVariables[0].reference.value);\r\n        this.setState({img:this.state.formVariables[0].reference.value});\r\n    }\r\n\r\n    typeRender = () =>{\r\n        \r\n        console.log(document.getElementById(\"types\").value);\r\n        var typeName = document.getElementById(document.getElementById(\"types\").value).innerHTML;\r\n        var temp = this.state;\r\n        temp.preview.subtopicName = typeName;\r\n        this.setState(temp); \r\n    }\r\n\r\n    addMetadata = () =>{\r\n        var temp = this.state;\r\n        console.log(temp);\r\n        temp.preview.metadata.push(document.getElementById(\"metadata\").value);\r\n        document.getElementById(\"metadata\").value = \"\";\r\n        this.setState(temp);\r\n    }\r\n\r\n    changeHandler = (contentId) =>{\r\n        \r\n        var temp = this.state;\r\n        var value = document.getElementById(contentId).value;\r\n        switch (contentId){\r\n            case \"name\":\r\n                temp.preview.name = value;\r\n                break;\r\n            case \"address\":\r\n                temp.preview.address = value;\r\n                break;\r\n            case \"phone\":\r\n                temp.preview.phoneNumber = value;\r\n                break;\r\n            case \"email\":\r\n                temp.preview.email = value;\r\n                break;\r\n            case \"username\":\r\n                temp.preview.username = value;\r\n                break;\r\n            case \"password\":\r\n                temp.preview.password = value;\r\n                break;\r\n                    \r\n        }\r\n        this.setState(temp);\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        console.log(this.state.formVariables);\r\n\r\n        var formVariables = this.state.formVariables;\r\n\r\n            formVariables.map((index)=>{index.default = this.state.item[index.id]});\r\n            var test = \"test\";\r\n        return (\r\n            <>\r\n            <Grid container spacing={1}>\r\n                    <Grid item xs={6} className=\"GridElement\">\r\n                            <Grid container spacing={1}>\r\n                                \r\n                                <Grid item xs={12} className=\"GridElement\">\r\n                                    <div className=\"BigImage\">\r\n                                        <AccountCircle style={{fontSize:145,color:\"#c4a748d0\"}}/>                                        \r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} className=\"GridElement\">\r\n                                    <div className=\"BigTag4\"> \r\n                                        <div style={{textAlign:\"left\",minWidth:\"100%\",fontSize:\"15px\"}}>\r\n                                        <Note/>{this.state.preview.name}<br/>\r\n                                        <LocationOn/>{this.state.preview.address}<br/>\r\n                                        <Phone/>{this.state.preview.phoneNumber}<br/>\r\n                                        <Mail/>{this.state.preview.email}<br/>                                        \r\n                                        <AccountBox/>{this.state.preview.username}<br/>                                        \r\n                                        <VpnKey/>{this.state.preview.password}<br/> \r\n                                        <LocalOffer/>self service<span style={{color:\"#000000\"}}>\r\n                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<Switch\r\n                                                color=\"default\"\r\n                                                id = \"registerSwitch\"\r\n                                                />\r\n                                        </span>\r\n                                        <br/>                            \r\n                                        </div>                                \r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} className=\"GridElement\">                                   \r\n                                    <span className=\"ButtonLayout\">\r\n                                    <Button\r\n                                        classes={{\r\n                                            root: classes.buttonRoot, // class name, e.g. `classes-nesting-root-x`\r\n                                            label: classes.buttonLabel, // class name, e.g. `classes-nesting-label-x`\r\n                                        }}\r\n                                        onClick={this.add.bind(this,formVariables)}\r\n                                    >Update</Button>\r\n                                    </span>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                    </Grid>\r\n                    <Grid item xs={6} className=\"GridElement\">\r\n                            <div style={{textAlign:\"left\"}}>\r\n                            {formVariables.map((index)=>(\r\n                                (index.id == \"type\")?(<>\r\n                                <div className=\"SelectLabel\">Type</div> \r\n                                <select name=\"type\" id=\"types\" className=\"Select\" onChange={this.typeRender}>\r\n                                    {this.props.menu.map((type)=>(\r\n                                <option id = {type.uuid} value={type.uuid} className=\"Option\">{type.name}</option>))}\r\n                              </select><br/>\r\n                                <br/>\r\n                                </>):(<>\r\n                                    <TextField id={index.id} label = {index.label} \r\n                                    \r\n                                    type={index.type}\r\n                                    inputRef={el =>index.reference = el} \r\n                                    className = {classes.main}\r\n                                    defaultValue = {index.default}\r\n                                    onChange = {(index.id == \"img\") ? (this.imageRender):((index.id == \"metadata\")?(null):(this.changeHandler.bind(this,index.id)))}\r\n                                    InputProps={{\r\n                                            classes:{\r\n                                                input:classes.font\r\n                                            }\r\n                                        }}\r\n                                        InputLabelProps={{\r\n                                            classes:{\r\n                                                root: classes.font,\r\n                                            }\r\n                                        }}\r\n                                    />   {(index.id == \"metadata\")?(<AddCircle style={{paddingTop:\"20px\"}} onClick={this.addMetadata} />):(null)}                          \r\n                                    <br/>\r\n                                    <br/>\r\n                                    </>)\r\n                                \r\n                            ))}\r\n                            \r\n                            </div>                      \r\n                    </Grid>\r\n                </Grid>\r\n           \r\n                </>\r\n        );\r\n    }\r\n}\r\n\r\nconst useStyles = {\r\n    main:{\r\n        '& label.Mui-focused': {\r\n            color: '#c4a748d0',\r\n          },          \r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#c4a748d0',\r\n      },\r\n    },\r\n    font:{\r\n        color : \"#c4a748d0\",\r\n        '&:-webkit-autofill': {\r\n            transitionDelay: '9999s',\r\n            transitionProperty: 'background-color, color',\r\n          },\r\n    },\r\n    buttonRoot: {\r\n        background: 'linear-gradient(45deg, #c4a748d0 30%, #c4a748d0 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'black',\r\n        height: 48,\r\n        padding: '0 30px',\r\n      },\r\n    buttonLabel: {\r\n        textTransform: 'capitalize',\r\n    },\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n  token : state.token,\r\n  user : state.user,\r\n  menu : state.menu,\r\n  order : state.test,\r\n  display : state.display\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(withStyles(useStyles)(ProfileEditPanel));\r\n\r\n",{"ruleId":"340","replacedBy":"341"},{"ruleId":"342","replacedBy":"343"},{"ruleId":"340","replacedBy":"344"},{"ruleId":"342","replacedBy":"345"},{"ruleId":"346","severity":1,"message":"347","line":1,"column":8,"nodeType":"348","messageId":"349","endLine":1,"endColumn":12},{"ruleId":"346","severity":1,"message":"350","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":18},{"ruleId":"346","severity":1,"message":"351","line":7,"column":10,"nodeType":"348","messageId":"349","endLine":7,"endColumn":20},{"ruleId":"346","severity":1,"message":"352","line":3,"column":44,"nodeType":"348","messageId":"349","endLine":3,"endColumn":56},{"ruleId":"346","severity":1,"message":"353","line":2,"column":17,"nodeType":"348","messageId":"349","endLine":2,"endColumn":26},{"ruleId":"346","severity":1,"message":"354","line":20,"column":9,"nodeType":"348","messageId":"349","endLine":20,"endColumn":21},{"ruleId":"355","severity":1,"message":"356","line":29,"column":24,"nodeType":"357","messageId":"358","endLine":29,"endColumn":26},{"ruleId":"355","severity":1,"message":"356","line":29,"column":38,"nodeType":"357","messageId":"358","endLine":29,"endColumn":40},{"ruleId":"346","severity":1,"message":"359","line":3,"column":19,"nodeType":"348","messageId":"349","endLine":3,"endColumn":30},{"ruleId":"355","severity":1,"message":"360","line":33,"column":50,"nodeType":"357","messageId":"358","endLine":33,"endColumn":52},{"ruleId":"361","severity":1,"message":"362","line":147,"column":25,"nodeType":"363","messageId":"364","endLine":147,"endColumn":27},{"ruleId":"355","severity":1,"message":"360","line":31,"column":17,"nodeType":"357","messageId":"358","endLine":31,"endColumn":19},{"ruleId":"355","severity":1,"message":"360","line":70,"column":85,"nodeType":"357","messageId":"358","endLine":70,"endColumn":87},{"ruleId":"346","severity":1,"message":"365","line":97,"column":10,"nodeType":"348","messageId":"349","endLine":97,"endColumn":18},{"ruleId":"346","severity":1,"message":"366","line":6,"column":52,"nodeType":"348","messageId":"349","endLine":6,"endColumn":60},{"ruleId":"346","severity":1,"message":"367","line":23,"column":22,"nodeType":"348","messageId":"349","endLine":23,"endColumn":27},{"ruleId":"368","severity":1,"message":"369","line":33,"column":7,"nodeType":"370","messageId":"371","endLine":36,"endColumn":15},{"ruleId":"346","severity":1,"message":"367","line":72,"column":22,"nodeType":"348","messageId":"349","endLine":72,"endColumn":27},{"ruleId":"372","severity":1,"message":"373","line":113,"column":60,"nodeType":"374","messageId":"375","endLine":113,"endColumn":61},{"ruleId":"346","severity":1,"message":"376","line":159,"column":7,"nodeType":"348","messageId":"349","endLine":159,"endColumn":18},{"ruleId":"346","severity":1,"message":"377","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":16},{"ruleId":"346","severity":1,"message":"378","line":7,"column":10,"nodeType":"348","messageId":"349","endLine":7,"endColumn":28},{"ruleId":"355","severity":1,"message":"360","line":38,"column":41,"nodeType":"357","messageId":"358","endLine":38,"endColumn":43},{"ruleId":"346","severity":1,"message":"379","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":15},{"ruleId":"346","severity":1,"message":"380","line":3,"column":10,"nodeType":"348","messageId":"349","endLine":3,"endColumn":30},{"ruleId":"346","severity":1,"message":"381","line":3,"column":42,"nodeType":"348","messageId":"349","endLine":3,"endColumn":46},{"ruleId":"361","severity":1,"message":"362","line":57,"column":44,"nodeType":"363","messageId":"364","endLine":57,"endColumn":46},{"ruleId":"361","severity":1,"message":"362","line":70,"column":42,"nodeType":"363","messageId":"364","endLine":70,"endColumn":44},{"ruleId":"346","severity":1,"message":"382","line":87,"column":12,"nodeType":"348","messageId":"349","endLine":87,"endColumn":19},{"ruleId":"355","severity":1,"message":"356","line":96,"column":41,"nodeType":"357","messageId":"358","endLine":96,"endColumn":43},{"ruleId":"355","severity":1,"message":"360","line":131,"column":108,"nodeType":"357","messageId":"358","endLine":131,"endColumn":110},{"ruleId":"346","severity":1,"message":"359","line":3,"column":19,"nodeType":"348","messageId":"349","endLine":3,"endColumn":30},{"ruleId":"346","severity":1,"message":"383","line":20,"column":15,"nodeType":"348","messageId":"349","endLine":20,"endColumn":21},{"ruleId":"355","severity":1,"message":"360","line":48,"column":32,"nodeType":"357","messageId":"358","endLine":48,"endColumn":34},{"ruleId":"355","severity":1,"message":"360","line":99,"column":25,"nodeType":"357","messageId":"358","endLine":99,"endColumn":27},{"ruleId":"346","severity":1,"message":"379","line":2,"column":18,"nodeType":"348","messageId":"349","endLine":2,"endColumn":23},{"ruleId":"346","severity":1,"message":"384","line":2,"column":81,"nodeType":"348","messageId":"349","endLine":2,"endColumn":96},{"ruleId":"346","severity":1,"message":"380","line":3,"column":10,"nodeType":"348","messageId":"349","endLine":3,"endColumn":30},{"ruleId":"346","severity":1,"message":"385","line":3,"column":32,"nodeType":"348","messageId":"349","endLine":3,"endColumn":40},{"ruleId":"346","severity":1,"message":"386","line":3,"column":42,"nodeType":"348","messageId":"349","endLine":3,"endColumn":46},{"ruleId":"346","severity":1,"message":"381","line":3,"column":48,"nodeType":"348","messageId":"349","endLine":3,"endColumn":52},{"ruleId":"346","severity":1,"message":"387","line":3,"column":54,"nodeType":"348","messageId":"349","endLine":3,"endColumn":66},{"ruleId":"346","severity":1,"message":"388","line":3,"column":68,"nodeType":"348","messageId":"349","endLine":3,"endColumn":81},{"ruleId":"346","severity":1,"message":"389","line":5,"column":48,"nodeType":"348","messageId":"349","endLine":5,"endColumn":61},{"ruleId":"346","severity":1,"message":"390","line":6,"column":39,"nodeType":"348","messageId":"349","endLine":6,"endColumn":48},{"ruleId":"346","severity":1,"message":"391","line":6,"column":50,"nodeType":"348","messageId":"349","endLine":6,"endColumn":57},{"ruleId":"346","severity":1,"message":"392","line":7,"column":10,"nodeType":"348","messageId":"349","endLine":7,"endColumn":27},{"ruleId":"346","severity":1,"message":"393","line":114,"column":11,"nodeType":"348","messageId":"349","endLine":114,"endColumn":27},{"ruleId":"346","severity":1,"message":"394","line":115,"column":11,"nodeType":"348","messageId":"349","endLine":115,"endColumn":34},{"ruleId":"346","severity":1,"message":"395","line":177,"column":27,"nodeType":"348","messageId":"349","endLine":177,"endColumn":32},{"ruleId":"346","severity":1,"message":"379","line":2,"column":24,"nodeType":"348","messageId":"349","endLine":2,"endColumn":29},{"ruleId":"346","severity":1,"message":"396","line":2,"column":31,"nodeType":"348","messageId":"349","endLine":2,"endColumn":36},{"ruleId":"346","severity":1,"message":"397","line":2,"column":38,"nodeType":"348","messageId":"349","endLine":2,"endColumn":47},{"ruleId":"346","severity":1,"message":"398","line":2,"column":49,"nodeType":"348","messageId":"349","endLine":2,"endColumn":58},{"ruleId":"346","severity":1,"message":"399","line":2,"column":60,"nodeType":"348","messageId":"349","endLine":2,"endColumn":74},{"ruleId":"346","severity":1,"message":"400","line":2,"column":76,"nodeType":"348","messageId":"349","endLine":2,"endColumn":85},{"ruleId":"346","severity":1,"message":"384","line":2,"column":87,"nodeType":"348","messageId":"349","endLine":2,"endColumn":102},{"ruleId":"346","severity":1,"message":"401","line":2,"column":104,"nodeType":"348","messageId":"349","endLine":2,"endColumn":112},{"ruleId":"346","severity":1,"message":"380","line":3,"column":10,"nodeType":"348","messageId":"349","endLine":3,"endColumn":30},{"ruleId":"346","severity":1,"message":"385","line":3,"column":53,"nodeType":"348","messageId":"349","endLine":3,"endColumn":61},{"ruleId":"346","severity":1,"message":"381","line":3,"column":77,"nodeType":"348","messageId":"349","endLine":3,"endColumn":81},{"ruleId":"346","severity":1,"message":"388","line":3,"column":107,"nodeType":"348","messageId":"349","endLine":3,"endColumn":120},{"ruleId":"346","severity":1,"message":"402","line":5,"column":19,"nodeType":"348","messageId":"349","endLine":5,"endColumn":30},{"ruleId":"346","severity":1,"message":"389","line":5,"column":32,"nodeType":"348","messageId":"349","endLine":5,"endColumn":45},{"ruleId":"361","severity":1,"message":"362","line":65,"column":38,"nodeType":"363","messageId":"364","endLine":65,"endColumn":40},{"ruleId":"403","severity":1,"message":"404","line":97,"column":9,"nodeType":"405","messageId":"406","endLine":107,"endColumn":10},{"ruleId":"361","severity":1,"message":"362","line":117,"column":38,"nodeType":"363","messageId":"364","endLine":117,"endColumn":40},{"ruleId":"346","severity":1,"message":"407","line":118,"column":17,"nodeType":"348","messageId":"349","endLine":118,"endColumn":21},{"ruleId":"408","severity":1,"message":"409","line":127,"column":41,"nodeType":"410","endLine":127,"endColumn":97},{"ruleId":"355","severity":1,"message":"360","line":174,"column":43,"nodeType":"357","messageId":"358","endLine":174,"endColumn":45},{"ruleId":"355","severity":1,"message":"360","line":188,"column":59,"nodeType":"357","messageId":"358","endLine":188,"endColumn":61},{"ruleId":"355","severity":1,"message":"360","line":188,"column":101,"nodeType":"357","messageId":"358","endLine":188,"endColumn":103},{"ruleId":"355","severity":1,"message":"360","line":199,"column":53,"nodeType":"357","messageId":"358","endLine":199,"endColumn":55},{"ruleId":"411","severity":1,"message":"412","line":99,"column":9,"nodeType":"413","messageId":"358","endLine":99,"endColumn":15},{"ruleId":"346","severity":1,"message":"379","line":2,"column":24,"nodeType":"348","messageId":"349","endLine":2,"endColumn":29},{"ruleId":"346","severity":1,"message":"384","line":2,"column":87,"nodeType":"348","messageId":"349","endLine":2,"endColumn":102},{"ruleId":"346","severity":1,"message":"380","line":3,"column":10,"nodeType":"348","messageId":"349","endLine":3,"endColumn":30},{"ruleId":"346","severity":1,"message":"414","line":3,"column":32,"nodeType":"348","messageId":"349","endLine":3,"endColumn":41},{"ruleId":"346","severity":1,"message":"385","line":3,"column":43,"nodeType":"348","messageId":"349","endLine":3,"endColumn":51},{"ruleId":"346","severity":1,"message":"386","line":3,"column":53,"nodeType":"348","messageId":"349","endLine":3,"endColumn":57},{"ruleId":"346","severity":1,"message":"381","line":3,"column":59,"nodeType":"348","messageId":"349","endLine":3,"endColumn":63},{"ruleId":"346","severity":1,"message":"388","line":3,"column":65,"nodeType":"348","messageId":"349","endLine":3,"endColumn":78},{"ruleId":"346","severity":1,"message":"378","line":5,"column":10,"nodeType":"348","messageId":"349","endLine":5,"endColumn":28},{"ruleId":"346","severity":1,"message":"415","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":24},{"ruleId":"355","severity":1,"message":"360","line":50,"column":43,"nodeType":"357","messageId":"358","endLine":50,"endColumn":45},{"ruleId":"355","severity":1,"message":"360","line":51,"column":42,"nodeType":"357","messageId":"358","endLine":51,"endColumn":44},{"ruleId":"355","severity":1,"message":"360","line":52,"column":42,"nodeType":"357","messageId":"358","endLine":52,"endColumn":44},{"ruleId":"355","severity":1,"message":"360","line":53,"column":45,"nodeType":"357","messageId":"358","endLine":53,"endColumn":47},{"ruleId":"355","severity":1,"message":"360","line":54,"column":44,"nodeType":"357","messageId":"358","endLine":54,"endColumn":46},{"ruleId":"355","severity":1,"message":"360","line":56,"column":61,"nodeType":"357","messageId":"358","endLine":56,"endColumn":63},{"ruleId":"355","severity":1,"message":"360","line":56,"column":124,"nodeType":"357","messageId":"358","endLine":56,"endColumn":126},{"ruleId":"355","severity":1,"message":"360","line":57,"column":44,"nodeType":"357","messageId":"358","endLine":57,"endColumn":46},{"ruleId":"355","severity":1,"message":"360","line":58,"column":44,"nodeType":"357","messageId":"358","endLine":58,"endColumn":46},{"ruleId":"355","severity":1,"message":"360","line":58,"column":101,"nodeType":"357","messageId":"358","endLine":58,"endColumn":103},{"ruleId":"361","severity":1,"message":"362","line":77,"column":38,"nodeType":"363","messageId":"364","endLine":77,"endColumn":40},{"ruleId":"346","severity":1,"message":"393","line":106,"column":11,"nodeType":"348","messageId":"349","endLine":106,"endColumn":27},{"ruleId":"346","severity":1,"message":"394","line":107,"column":11,"nodeType":"348","messageId":"349","endLine":107,"endColumn":34},{"ruleId":"346","severity":1,"message":"395","line":153,"column":57,"nodeType":"348","messageId":"349","endLine":153,"endColumn":62},{"ruleId":"355","severity":1,"message":"360","line":189,"column":97,"nodeType":"357","messageId":"358","endLine":189,"endColumn":99},{"ruleId":"346","severity":1,"message":"379","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":15},{"ruleId":"346","severity":1,"message":"384","line":2,"column":73,"nodeType":"348","messageId":"349","endLine":2,"endColumn":88},{"ruleId":"346","severity":1,"message":"380","line":3,"column":10,"nodeType":"348","messageId":"349","endLine":3,"endColumn":30},{"ruleId":"346","severity":1,"message":"385","line":3,"column":32,"nodeType":"348","messageId":"349","endLine":3,"endColumn":40},{"ruleId":"346","severity":1,"message":"386","line":3,"column":42,"nodeType":"348","messageId":"349","endLine":3,"endColumn":46},{"ruleId":"346","severity":1,"message":"381","line":3,"column":48,"nodeType":"348","messageId":"349","endLine":3,"endColumn":52},{"ruleId":"346","severity":1,"message":"388","line":3,"column":68,"nodeType":"348","messageId":"349","endLine":3,"endColumn":81},{"ruleId":"346","severity":1,"message":"382","line":107,"column":12,"nodeType":"348","messageId":"349","endLine":107,"endColumn":19},{"ruleId":"346","severity":1,"message":"393","line":110,"column":11,"nodeType":"348","messageId":"349","endLine":110,"endColumn":27},{"ruleId":"346","severity":1,"message":"394","line":111,"column":11,"nodeType":"348","messageId":"349","endLine":111,"endColumn":34},{"ruleId":"355","severity":1,"message":"360","line":140,"column":91,"nodeType":"357","messageId":"358","endLine":140,"endColumn":93},{"ruleId":"355","severity":1,"message":"360","line":141,"column":37,"nodeType":"357","messageId":"358","endLine":141,"endColumn":39},{"ruleId":"355","severity":1,"message":"360","line":142,"column":36,"nodeType":"357","messageId":"358","endLine":142,"endColumn":38},{"ruleId":"346","severity":1,"message":"379","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":15},{"ruleId":"346","severity":1,"message":"384","line":2,"column":73,"nodeType":"348","messageId":"349","endLine":2,"endColumn":88},{"ruleId":"346","severity":1,"message":"380","line":3,"column":10,"nodeType":"348","messageId":"349","endLine":3,"endColumn":30},{"ruleId":"346","severity":1,"message":"385","line":3,"column":43,"nodeType":"348","messageId":"349","endLine":3,"endColumn":51},{"ruleId":"346","severity":1,"message":"386","line":3,"column":53,"nodeType":"348","messageId":"349","endLine":3,"endColumn":57},{"ruleId":"346","severity":1,"message":"381","line":3,"column":59,"nodeType":"348","messageId":"349","endLine":3,"endColumn":63},{"ruleId":"346","severity":1,"message":"387","line":3,"column":65,"nodeType":"348","messageId":"349","endLine":3,"endColumn":77},{"ruleId":"346","severity":1,"message":"388","line":3,"column":79,"nodeType":"348","messageId":"349","endLine":3,"endColumn":92},{"ruleId":"346","severity":1,"message":"382","line":101,"column":12,"nodeType":"348","messageId":"349","endLine":101,"endColumn":19},{"ruleId":"346","severity":1,"message":"393","line":104,"column":11,"nodeType":"348","messageId":"349","endLine":104,"endColumn":27},{"ruleId":"346","severity":1,"message":"394","line":105,"column":11,"nodeType":"348","messageId":"349","endLine":105,"endColumn":34},{"ruleId":"355","severity":1,"message":"360","line":134,"column":91,"nodeType":"357","messageId":"358","endLine":134,"endColumn":93},{"ruleId":"355","severity":1,"message":"360","line":135,"column":37,"nodeType":"357","messageId":"358","endLine":135,"endColumn":39},{"ruleId":"355","severity":1,"message":"360","line":136,"column":36,"nodeType":"357","messageId":"358","endLine":136,"endColumn":38},{"ruleId":"355","severity":1,"message":"356","line":26,"column":56,"nodeType":"357","messageId":"358","endLine":26,"endColumn":58},{"ruleId":"361","severity":1,"message":"362","line":35,"column":40,"nodeType":"363","messageId":"364","endLine":35,"endColumn":42},{"ruleId":"355","severity":1,"message":"360","line":80,"column":23,"nodeType":"357","messageId":"358","endLine":80,"endColumn":25},{"ruleId":"346","severity":1,"message":"379","line":2,"column":24,"nodeType":"348","messageId":"349","endLine":2,"endColumn":29},{"ruleId":"346","severity":1,"message":"398","line":2,"column":49,"nodeType":"348","messageId":"349","endLine":2,"endColumn":58},{"ruleId":"346","severity":1,"message":"400","line":2,"column":76,"nodeType":"348","messageId":"349","endLine":2,"endColumn":85},{"ruleId":"346","severity":1,"message":"384","line":2,"column":87,"nodeType":"348","messageId":"349","endLine":2,"endColumn":102},{"ruleId":"346","severity":1,"message":"380","line":3,"column":10,"nodeType":"348","messageId":"349","endLine":3,"endColumn":30},{"ruleId":"346","severity":1,"message":"414","line":3,"column":32,"nodeType":"348","messageId":"349","endLine":3,"endColumn":41},{"ruleId":"346","severity":1,"message":"385","line":3,"column":43,"nodeType":"348","messageId":"349","endLine":3,"endColumn":51},{"ruleId":"346","severity":1,"message":"386","line":3,"column":53,"nodeType":"348","messageId":"349","endLine":3,"endColumn":57},{"ruleId":"346","severity":1,"message":"381","line":3,"column":59,"nodeType":"348","messageId":"349","endLine":3,"endColumn":63},{"ruleId":"346","severity":1,"message":"388","line":3,"column":65,"nodeType":"348","messageId":"349","endLine":3,"endColumn":78},{"ruleId":"346","severity":1,"message":"378","line":5,"column":10,"nodeType":"348","messageId":"349","endLine":5,"endColumn":28},{"ruleId":"346","severity":1,"message":"416","line":5,"column":30,"nodeType":"348","messageId":"349","endLine":5,"endColumn":37},{"ruleId":"346","severity":1,"message":"415","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":24},{"ruleId":"346","severity":1,"message":"402","line":7,"column":20,"nodeType":"348","messageId":"349","endLine":7,"endColumn":31},{"ruleId":"346","severity":1,"message":"417","line":8,"column":8,"nodeType":"348","messageId":"349","endLine":8,"endColumn":21},{"ruleId":"355","severity":1,"message":"360","line":54,"column":43,"nodeType":"357","messageId":"358","endLine":54,"endColumn":45},{"ruleId":"355","severity":1,"message":"360","line":55,"column":42,"nodeType":"357","messageId":"358","endLine":55,"endColumn":44},{"ruleId":"355","severity":1,"message":"360","line":56,"column":42,"nodeType":"357","messageId":"358","endLine":56,"endColumn":44},{"ruleId":"355","severity":1,"message":"360","line":57,"column":45,"nodeType":"357","messageId":"358","endLine":57,"endColumn":47},{"ruleId":"355","severity":1,"message":"360","line":58,"column":44,"nodeType":"357","messageId":"358","endLine":58,"endColumn":46},{"ruleId":"355","severity":1,"message":"360","line":60,"column":61,"nodeType":"357","messageId":"358","endLine":60,"endColumn":63},{"ruleId":"355","severity":1,"message":"360","line":60,"column":124,"nodeType":"357","messageId":"358","endLine":60,"endColumn":126},{"ruleId":"355","severity":1,"message":"360","line":61,"column":44,"nodeType":"357","messageId":"358","endLine":61,"endColumn":46},{"ruleId":"355","severity":1,"message":"360","line":62,"column":44,"nodeType":"357","messageId":"358","endLine":62,"endColumn":46},{"ruleId":"355","severity":1,"message":"360","line":62,"column":101,"nodeType":"357","messageId":"358","endLine":62,"endColumn":103},{"ruleId":"361","severity":1,"message":"362","line":81,"column":38,"nodeType":"363","messageId":"364","endLine":81,"endColumn":40},{"ruleId":"346","severity":1,"message":"418","line":106,"column":12,"nodeType":"348","messageId":"349","endLine":106,"endColumn":23},{"ruleId":"346","severity":1,"message":"419","line":106,"column":24,"nodeType":"348","messageId":"349","endLine":106,"endColumn":28},{"ruleId":"346","severity":1,"message":"393","line":107,"column":11,"nodeType":"348","messageId":"349","endLine":107,"endColumn":27},{"ruleId":"346","severity":1,"message":"394","line":108,"column":11,"nodeType":"348","messageId":"349","endLine":108,"endColumn":34},{"ruleId":"346","severity":1,"message":"379","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":15},{"ruleId":"346","severity":1,"message":"384","line":2,"column":73,"nodeType":"348","messageId":"349","endLine":2,"endColumn":88},{"ruleId":"346","severity":1,"message":"381","line":3,"column":57,"nodeType":"348","messageId":"349","endLine":3,"endColumn":61},{"ruleId":"346","severity":1,"message":"389","line":5,"column":10,"nodeType":"348","messageId":"349","endLine":5,"endColumn":23},{"ruleId":"346","severity":1,"message":"390","line":6,"column":10,"nodeType":"348","messageId":"349","endLine":6,"endColumn":19},{"ruleId":"361","severity":1,"message":"362","line":64,"column":45,"nodeType":"363","messageId":"364","endLine":64,"endColumn":47},{"ruleId":"346","severity":1,"message":"382","line":80,"column":12,"nodeType":"348","messageId":"349","endLine":80,"endColumn":19},{"ruleId":"346","severity":1,"message":"393","line":83,"column":11,"nodeType":"348","messageId":"349","endLine":83,"endColumn":27},{"ruleId":"346","severity":1,"message":"394","line":84,"column":11,"nodeType":"348","messageId":"349","endLine":84,"endColumn":34},{"ruleId":"355","severity":1,"message":"360","line":118,"column":108,"nodeType":"357","messageId":"358","endLine":118,"endColumn":110},{"ruleId":"346","severity":1,"message":"379","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":15},{"ruleId":"346","severity":1,"message":"384","line":2,"column":73,"nodeType":"348","messageId":"349","endLine":2,"endColumn":88},{"ruleId":"346","severity":1,"message":"420","line":3,"column":60,"nodeType":"348","messageId":"349","endLine":3,"endColumn":73},{"ruleId":"346","severity":1,"message":"389","line":5,"column":10,"nodeType":"348","messageId":"349","endLine":5,"endColumn":23},{"ruleId":"346","severity":1,"message":"390","line":6,"column":10,"nodeType":"348","messageId":"349","endLine":6,"endColumn":19},{"ruleId":"361","severity":1,"message":"362","line":59,"column":49,"nodeType":"363","messageId":"364","endLine":59,"endColumn":51},{"ruleId":"346","severity":1,"message":"382","line":87,"column":12,"nodeType":"348","messageId":"349","endLine":87,"endColumn":19},{"ruleId":"346","severity":1,"message":"393","line":90,"column":11,"nodeType":"348","messageId":"349","endLine":90,"endColumn":27},{"ruleId":"346","severity":1,"message":"394","line":91,"column":11,"nodeType":"348","messageId":"349","endLine":91,"endColumn":34},{"ruleId":"355","severity":1,"message":"360","line":125,"column":108,"nodeType":"357","messageId":"358","endLine":125,"endColumn":110},{"ruleId":"346","severity":1,"message":"379","line":2,"column":24,"nodeType":"348","messageId":"349","endLine":2,"endColumn":29},{"ruleId":"346","severity":1,"message":"396","line":2,"column":39,"nodeType":"348","messageId":"349","endLine":2,"endColumn":44},{"ruleId":"346","severity":1,"message":"397","line":2,"column":46,"nodeType":"348","messageId":"349","endLine":2,"endColumn":55},{"ruleId":"346","severity":1,"message":"398","line":2,"column":57,"nodeType":"348","messageId":"349","endLine":2,"endColumn":66},{"ruleId":"346","severity":1,"message":"399","line":2,"column":68,"nodeType":"348","messageId":"349","endLine":2,"endColumn":82},{"ruleId":"346","severity":1,"message":"400","line":2,"column":84,"nodeType":"348","messageId":"349","endLine":2,"endColumn":93},{"ruleId":"346","severity":1,"message":"384","line":2,"column":95,"nodeType":"348","messageId":"349","endLine":2,"endColumn":110},{"ruleId":"346","severity":1,"message":"401","line":2,"column":112,"nodeType":"348","messageId":"349","endLine":2,"endColumn":120},{"ruleId":"346","severity":1,"message":"380","line":3,"column":21,"nodeType":"348","messageId":"349","endLine":3,"endColumn":41},{"ruleId":"346","severity":1,"message":"421","line":3,"column":54,"nodeType":"348","messageId":"349","endLine":3,"endColumn":62},{"ruleId":"346","severity":1,"message":"385","line":3,"column":64,"nodeType":"348","messageId":"349","endLine":3,"endColumn":72},{"ruleId":"346","severity":1,"message":"422","line":3,"column":75,"nodeType":"348","messageId":"349","endLine":3,"endColumn":85},{"ruleId":"346","severity":1,"message":"381","line":3,"column":88,"nodeType":"348","messageId":"349","endLine":3,"endColumn":92},{"ruleId":"346","severity":1,"message":"423","line":3,"column":94,"nodeType":"348","messageId":"349","endLine":3,"endColumn":102},{"ruleId":"346","severity":1,"message":"387","line":3,"column":104,"nodeType":"348","messageId":"349","endLine":3,"endColumn":116},{"ruleId":"346","severity":1,"message":"388","line":3,"column":118,"nodeType":"348","messageId":"349","endLine":3,"endColumn":131},{"ruleId":"361","severity":1,"message":"362","line":67,"column":38,"nodeType":"363","messageId":"364","endLine":67,"endColumn":40},{"ruleId":"403","severity":1,"message":"404","line":99,"column":9,"nodeType":"405","messageId":"406","endLine":119,"endColumn":10},{"ruleId":"361","severity":1,"message":"362","line":129,"column":38,"nodeType":"363","messageId":"364","endLine":129,"endColumn":40},{"ruleId":"346","severity":1,"message":"407","line":130,"column":17,"nodeType":"348","messageId":"349","endLine":130,"endColumn":21},{"ruleId":"355","severity":1,"message":"360","line":178,"column":43,"nodeType":"357","messageId":"358","endLine":178,"endColumn":45},{"ruleId":"355","severity":1,"message":"360","line":192,"column":59,"nodeType":"357","messageId":"358","endLine":192,"endColumn":61},{"ruleId":"355","severity":1,"message":"360","line":192,"column":101,"nodeType":"357","messageId":"358","endLine":192,"endColumn":103},{"ruleId":"355","severity":1,"message":"360","line":203,"column":53,"nodeType":"357","messageId":"358","endLine":203,"endColumn":55},"no-native-reassign",["424"],"no-negated-in-lhs",["425"],["424"],["425"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'TablePanel' is defined but never used.","'removeItem' is defined but never used.","'setPanelList' is assigned a value but never used.","'useEffect' is defined but never used.","'handleToggle' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useDispatch' is defined but never used.","Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'TabPanel' is defined but never used.","'Settings' is defined but never used.","'match' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'drawerWidth' is assigned a value but never used.","'MainPage' is defined but never used.","'setDisplayingPanel' is defined but never used.","'Paper' is defined but never used.","'AccountBalanceWallet' is defined but never used.","'Face' is defined but never used.","'classes' is assigned a value but never used.","'values' is assigned a value but never used.","'TablePagination' is defined but never used.","'CheckBox' is defined but never used.","'Edit' is defined but never used.","'HighlightOff' is defined but never used.","'HourglassFull' is defined but never used.","'requestOrders' is defined but never used.","'setOrders' is defined but never used.","'setUser' is defined but never used.","'setRestaurantMenu' is defined but never used.","'handleChangePage' is assigned a value but never used.","'handleChangeRowsPerPage' is assigned a value but never used.","'value' is assigned a value but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'requestMenu' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'test' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","'AddCircle' is defined but never used.","'ItemDetailsPanel' is defined but never used.","'setMenu' is defined but never used.","'MiniItemPanel' is defined but never used.","'rowsPerPage' is assigned a value but never used.","'page' is assigned a value but never used.","'DeleteForever' is defined but never used.","'Bookmark' is defined but never used.","'CheckSharp' is defined but never used.","'Fastfood' is defined but never used.","no-global-assign","no-unsafe-negation"]